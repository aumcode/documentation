<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Lexer(TToken) Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Lexer%3CTToken%3E class" /><meta name="System.Keywords" content="NFX.CodeAnalysis.Lexer%3CTToken%3E class" /><meta name="System.Keywords" content="Lexer%3CTToken%3E class, about Lexer%3CTToken%3E class" /><meta name="System.Keywords" content="Lexer(Of TToken) class" /><meta name="System.Keywords" content="NFX.CodeAnalysis.Lexer(Of TToken) class" /><meta name="System.Keywords" content="Lexer(Of TToken) class, about Lexer(Of TToken) class" /><meta name="Microsoft.Help.F1" content="NFX.CodeAnalysis.Lexer`1" /><meta name="Microsoft.Help.Id" content="T:NFX.CodeAnalysis.Lexer`1" /><meta name="Description" content="Performs lexical analysis of the source code in particular language Allows to enumerate over source as typed Token stream - depending on implementation enumeration may do lexical analysis token-by-token or in chunks with every enumerator advance" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="NFX.CodeAnalysis" /><meta name="file" content="T_NFX_CodeAnalysis_Lexer_1" /><meta name="guid" content="T_NFX_CodeAnalysis_Lexer_1" /><link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdLogoColumn"><img src="./../icons/NFX.logo.35.png" /></td><td class="OH_tdTitleColumn">Lexer<span id="ID0EDBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDBABAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="typeparameter">TToken</span><span id="ID0EBBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBABAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Class</td><td class="OH_tdRunningTitleColumn">NFX Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p><div class="summary">
            Performs lexical analysis of the source code in particular language
            Allows to enumerate over source as typed Token stream - depending on implementation enumeration may do
            lexical analysis token-by-token or in chunks with every enumerator advance
            </div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Inheritance Hierarchy</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="ID0EBTMAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBTMAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Object</a><br />  <a href="T_NFX_CodeAnalysis_CommonCodeProcessor.htm" target="">NFX.CodeAnalysis<span id="ID0EBQMAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBQMAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>CommonCodeProcessor</a><br />    <a href="T_NFX_CodeAnalysis_SourceRefCommonCodeProcessor.htm" target="">NFX.CodeAnalysis<span id="ID0EBNMAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBNMAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>SourceRefCommonCodeProcessor</a><br />      <span class="selflink">NFX.CodeAnalysis<span id="ID0EEKMAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEKMAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Lexer<span id="ID0ECKMAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECKMAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>TToken<span id="ID0EAKMAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAKMAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></span><br />        <a href="T_NFX_CodeAnalysis_CSharp_CSLexer.htm" target="">NFX.CodeAnalysis.CSharp<span id="ID0EBHMAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBHMAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>CSLexer</a><br />        <a href="T_NFX_CodeAnalysis_JSON_JSONLexer.htm" target="">NFX.CodeAnalysis.JSON<span id="ID0EBEMAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBEMAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>JSONLexer</a><br />        <a href="T_NFX_CodeAnalysis_Laconfig_LaconfigLexer.htm" target="">NFX.CodeAnalysis.Laconfig<span id="ID0EBBMAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBMAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>LaconfigLexer</a><br /><p></p><b>Namespace:</b> <a href="N_NFX_CodeAnalysis.htm" target="">NFX.CodeAnalysis</a><br /><b>Assembly:</b> <span sdata="assembly">NFX</span> (in NFX.dll) Version: 3.0.0.1 (3.0.0.1)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EDBCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EDBCAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EDBCAAAAA_tabimgleft"></div><div id="ID0EDBCAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDBCAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EDBCAAAAA_tab2" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDBCAAAAA','Visual Basic','2','4');return false;">VB</a></div><div id="ID0EDBCAAAAA_tab3" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDBCAAAAA','Visual C++','3','4');return false;">C++</a></div><div id="ID0EDBCAAAAA_tab4" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDBCAAAAA','F#','4','4');return false;">F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EDBCAAAAA_tabimgright"></div></div><div id="ID0EDBCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EDBCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EDBCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EDBCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EDBCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EDBCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EDBCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EDBCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="identifier">Lexer</span>&lt;TToken&gt; : <span class="identifier">SourceRefCommonCodeProcessor</span>, 
	<span class="identifier">ILexer</span>, <span class="identifier">ICodeProcessor</span>, <span class="identifier">IEnumerable</span>&lt;TToken&gt;, <span class="identifier">IEnumerable</span> 
<span class="keyword">where</span> TToken : <span class="identifier">Token</span></pre></div><div id="ID0EDBCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public abstract class Lexer&lt;TToken&gt; : SourceRefCommonCodeProcessor, 
	ILexer, ICodeProcessor, IEnumerable&lt;TToken&gt;, IEnumerable 
where TToken : Token</pre></div><div id="ID0EDBCAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">Public</span> <span class="keyword">MustInherit</span> <span class="keyword">Class</span> <span class="identifier">Lexer</span>(<span class="keyword">Of</span> TToken <span class="keyword">As</span> <span class="identifier">Token</span>)
	<span class="keyword">Inherits</span> <span class="identifier">SourceRefCommonCodeProcessor</span> 
	<span class="keyword">Implements</span> <span class="identifier">ILexer</span>, <span class="identifier">ICodeProcessor</span>, <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> TToken), 
	<span class="identifier">IEnumerable</span></pre></div><div id="ID0EDBCAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>Public MustInherit Class Lexer(Of TToken As Token)
	Inherits SourceRefCommonCodeProcessor 
	Implements ILexer, ICodeProcessor, IEnumerable(Of TToken), 
	IEnumerable</pre></div><div id="ID0EDBCAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">generic</span>&lt;<span class="keyword">typename</span> TToken&gt;
<span class="keyword">where</span> TToken : <span class="identifier">Token</span> 
<span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">Lexer</span> <span class="keyword">abstract</span> : <span class="keyword">public</span> <span class="identifier">SourceRefCommonCodeProcessor</span>, 
	<span class="identifier">ILexer</span>, <span class="identifier">ICodeProcessor</span>, <span class="identifier">IEnumerable</span>&lt;TToken&gt;, <span class="identifier">IEnumerable</span></pre></div><div id="ID0EDBCAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre>generic&lt;typename TToken&gt;
where TToken : Token 
public ref class Lexer abstract : public SourceRefCommonCodeProcessor, 
	ILexer, ICodeProcessor, IEnumerable&lt;TToken&gt;, IEnumerable</pre></div><div id="ID0EDBCAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre>[&lt;<span class="identifier">AbstractClassAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">Lexer</span>&lt;'TToken <span class="keyword">when</span> 'TToken : <span class="identifier">Token</span>&gt; =  
    <span class="keyword">class</span> 
        <span class="keyword">inherit</span> <span class="identifier">SourceRefCommonCodeProcessor</span> 
        <span class="keyword">interface</span> <span class="identifier">ILexer</span> 
        <span class="keyword">interface</span> <span class="identifier">ICodeProcessor</span> 
        <span class="keyword">interface</span> <span class="identifier">IEnumerable</span>&lt;'TToken&gt;
        <span class="keyword">interface</span> <span class="identifier">IEnumerable</span> 
    <span class="keyword">end</span></pre></div><div id="ID0EDBCAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre>[&lt;AbstractClassAttribute&gt;]
type Lexer&lt;'TToken when 'TToken : Token&gt; =  
    class 
        inherit SourceRefCommonCodeProcessor 
        interface ILexer 
        interface ICodeProcessor 
        interface IEnumerable&lt;'TToken&gt;
        interface IEnumerable 
    end</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EDBCAAAAA');</script></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Type Parameters</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><dl><dt><span class="parameter">TToken</span></dt><dd></dd></dl><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="AllMembers_T_NFX_CodeAnalysis_Lexer_1.htm" target="">Lexer<span id="ID0EDABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDABAAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>TToken<span id="ID0EBABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABAAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Members</a></div><div class="seeAlsoStyle"><a href="N_NFX_CodeAnalysis.htm" target="">NFX.CodeAnalysis Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p /><p><a href="http://www.itadapter.com" target="_blank"><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /> 
						Copyright © 2006-2017 ITAdapter Corp Inc. (http://www.itadapter.com)</a></p><div class="OH_feedbacklink"><a href="mailto:nfx@itadapter.com?subject=NFX+Class+Library+Lexer(TToken)+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic to Contact Us.</div></div></body></html>