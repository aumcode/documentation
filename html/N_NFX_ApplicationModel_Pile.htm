<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>NFX.ApplicationModel.Pile Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="NFX.ApplicationModel.Pile namespace" /><meta name="Microsoft.Help.F1" content="NFX.ApplicationModel.Pile" /><meta name="Microsoft.Help.Id" content="N:NFX.ApplicationModel.Pile" /><meta name="Description" content=" " /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="NFX.ApplicationModel.Pile" /><meta name="file" content="N_NFX_ApplicationModel_Pile" /><meta name="guid" content="N_NFX_ApplicationModel_Pile" /><link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdLogoColumn"><img src="./../icons/NFX.logo.35.png" /></td><td class="OH_tdTitleColumn">NFX.ApplicationModel.Pile Namespace</td><td class="OH_tdRunningTitleColumn">NFX Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p><div class="summary"> </div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Classes</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="typeList" class="members"><tr><th class="ps_iconColumn">
					 
				</th><th class="ps_nameColumn">Class</th><th class="ps_descriptionColumn">Description</th></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_ApplicationModel_Pile_CacheExtensions.htm" target="">CacheExtensions</a></td><td><div class="summary">
            Provides read/write-through extensions
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_ApplicationModel_Pile_DefaultPile.htm" target="">DefaultPile</a></td><td><div class="summary">
            Provides default implementation of IPile which stores objects on a local machine
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_ApplicationModel_Pile_LocalCache.htm" target="">LocalCache</a></td><td><div class="summary">
            Provides default implementation of a cache that stores the mapping locally.
            The mapped-to objects may reside in local or distributed pile as configured
            </div></td></tr><tr data="class; public"><td><img src="./../icons/protclass.gif" alt="Protected class" title="Protected class" /></td><td><a href="T_NFX_ApplicationModel_Pile_LocalCacheTable.htm" target="">LocalCacheTable</a></td><td></td></tr><tr data="class; public"><td><img src="./../icons/protclass.gif" alt="Protected class" title="Protected class" /></td><td><a href="T_NFX_ApplicationModel_Pile_LocalCacheTable_1.htm" target="">LocalCacheTable<span id="ID0ECABFADAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECABFADAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>TKey<span id="ID0EAABFADAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAABFADAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></a></td><td></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_ApplicationModel_Pile_PileAccessViolationException.htm" target="">PileAccessViolationException</a></td><td><div class="summary">
            Thrown by pile memory manager when a supplied PilePointer is not pointing to a valid buffer
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_ApplicationModel_Pile_PileCacheException.htm" target="">PileCacheException</a></td><td><div class="summary">
            Thrown by pile cache
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_ApplicationModel_Pile_PileException.htm" target="">PileException</a></td><td><div class="summary">
            Thrown by pile memory manager
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_ApplicationModel_Pile_PileOutOfSpaceException.htm" target="">PileOutOfSpaceException</a></td><td><div class="summary">
            Thrown by pile memory manager when there is not anough room in the pile to perform the requested operation
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_ApplicationModel_Pile_TableOptions.htm" target="">TableOptions</a></td><td><div class="summary">
            Provides config options for cache tables
            </div></td></tr></table><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Structures</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="typeList" class="members"><tr><th class="ps_iconColumn">
					 
				</th><th class="ps_nameColumn">Structure</th><th class="ps_descriptionColumn">Description</th></tr><tr data="structure; public"><td><img src="./../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_NFX_ApplicationModel_Pile_Dated2GDIDWithISOKey.htm" target="">Dated2GDIDWithISOKey</a></td><td><div class="summary">
            Represents a date (not time)-sensitive value-type 2 GDIDs+3 char ISO code tuple, suitable for serving as a cache table key.
            The point of this structure is to avoid creation of references for Pile cache so keys alone do not stall the GC.
            The ISO code is case-insensitive
            </div></td></tr><tr data="structure; public"><td><img src="./../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_NFX_ApplicationModel_Pile_DatedGDIDWithISOKey.htm" target="">DatedGDIDWithISOKey</a></td><td><div class="summary">
            Represents a date (not time)-sensitive value-type GDID+3 char ISO code tuple, suitable for serving as a cache table key.
            The point of this structure is to avoid creation of references for Pile cache so keys alone do not stall the GC.
            The ISO code is case-insensitive
            </div></td></tr><tr data="structure; public"><td><img src="./../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_NFX_ApplicationModel_Pile_DefaultPile_SegmentCrawlStatus.htm" target="">DefaultPile<span id="ID0EBABFACAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABFACAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>SegmentCrawlStatus</a></td><td><div class="summary">
            Holds information obtained after a segment crawl
            </div></td></tr><tr data="structure; public"><td><img src="./../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_NFX_ApplicationModel_Pile_GDIDWithInt.htm" target="">GDIDWithInt</a></td><td><div class="summary">
            Represents GDID with int
            </div></td></tr><tr data="structure; public"><td><img src="./../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_NFX_ApplicationModel_Pile_GDIDWithISOKey.htm" target="">GDIDWithISOKey</a></td><td><div class="summary">
            Represents a value-type GDID+3 char ISO code tuple, suitable for serving as a cache table key.
            The point of this structure is to avoid creation of references for Pile cache so keys alone do not stall the GC.
            The ISO code is case-insensitive
            </div></td></tr><tr data="structure; public"><td><img src="./../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_NFX_ApplicationModel_Pile_GDIDWithStrHash.htm" target="">GDIDWithStrHash</a></td><td><div class="summary">
            Represents a GDID with 8 byte string hash. The hash is case sensitive.
            The point of this structure is to avoid creation of references for Pile cache so keys alone do not stall the GC.
            </div></td></tr><tr data="structure; public"><td><img src="./../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_NFX_ApplicationModel_Pile_PilePointer.htm" target="">PilePointer</a></td><td><div class="summary">
            Represents a pointer to the pile object (object stored in a pile).
            The reference may be local or distributed in which case the NodeID is&gt;=0.
            Distributed pointers are very useful for organizing piles of objects distributed among many servers, for example
             for "Big Memory" implementations or large neural networks where nodes may inter-connect between servers.
            The CLR reference to the IPile is not a part of this struct for performance and practicality reasons, as
             it is highly unlikely that there are going to be more than one instance of a pile in a process, however
             should more than 1 pile be allocated than this pointer would need to be wrapped in some other structure along with source IPile reference
            </div></td></tr><tr data="structure; public"><td><img src="./../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_NFX_ApplicationModel_Pile_TwoGDIDWithISOKey.htm" target="">TwoGDIDWithISOKey</a></td><td><div class="summary">
            Represents a value-type 2 GDIDs+3 char ISO code tuple, suitable for serving as a cache table key.
            The point of this structure is to avoid creation of references for Pile cache so keys alone do not stall the GC.
            The ISO code is case-insensitive
            </div></td></tr></table><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Interfaces</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="typeList" class="members"><tr><th class="ps_iconColumn">
					 
				</th><th class="ps_nameColumn">Interface</th><th class="ps_descriptionColumn">Description</th></tr><tr data="interface; public"><td><img src="./../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_NFX_ApplicationModel_Pile_ICache.htm" target="">ICache</a></td><td><div class="summary">
            Represents a cache of expiring objects, which are identified by a key and stored in a pile.
            Pile allows to store hundreds of millions of objects without overloading the managed GC.
            The cache may be local or distributed
            </div></td></tr><tr data="interface; public"><td><img src="./../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_NFX_ApplicationModel_Pile_ICacheImplementation.htm" target="">ICacheImplementation</a></td><td></td></tr><tr data="interface; public"><td><img src="./../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_NFX_ApplicationModel_Pile_ICacheTable.htm" target="">ICacheTable</a></td><td></td></tr><tr data="interface; public"><td><img src="./../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_NFX_ApplicationModel_Pile_ICacheTable_1.htm" target="">ICacheTable<span id="ID0ECABDABAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECABDABAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>TKey<span id="ID0EAABDABAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAABDABAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></a></td><td></td></tr><tr data="interface; public"><td><img src="./../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_NFX_ApplicationModel_Pile_IPile.htm" target="">IPile</a></td><td><div class="summary">
            Represents a pile of objects - a custom memory heap that can store native CLR objects in a tightly-serialized form.
            Piles can be either local (allocate local RAM on the server), or distributed (allocate RAM on many servers).
            This class is designed primarily for applications that need to store/cache very many (100s of millions on local, billions on distributed) of objects in RAM
            (and/or possibly on disk) without causing the local CLR's GC scans of huge object graphs.
            Implementors of this interface are custom memory managers that favor the GC performance in apps with many objects at the cost of higher CPU usage.
            The implementor must be thread-safe for all operations unless stated otherwise on a member level.
            The memory represented by this class as a whole is not synchronizable, that is - it does not support functions like Interlocked-family, Lock, MemoryBarriers and the like
             that regular RAM supports. Should a need arise to interlock within the pile - a custom CLR-based lock must be used to syncronize access to pile as a whole, for example:
              a Get does not impose a lock on ALL concurrent writes throught the pile (a write does not block all gets either).
            </div></td></tr><tr data="interface; public"><td><img src="./../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_NFX_ApplicationModel_Pile_IPileImplementation.htm" target="">IPileImplementation</a></td><td></td></tr><tr data="interface; public"><td><img src="./../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_NFX_ApplicationModel_Pile_IPileStatus.htm" target="">IPileStatus</a></td><td><div class="summary">
            Provides information about the pile - number of objects, allocated bytes, etc.
            </div></td></tr></table><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Enumerations</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="typeList" class="members"><tr><th class="ps_iconColumn">
					 
				</th><th class="ps_nameColumn">Enumeration</th><th class="ps_descriptionColumn">Description</th></tr><tr data="enumeration; public"><td><img src="./../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_NFX_ApplicationModel_Pile_AllocationMode.htm" target="">AllocationMode</a></td><td><div class="summary">
            Defines modes of allocation: space/time tradeoff
            </div></td></tr><tr data="enumeration; public"><td><img src="./../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_NFX_ApplicationModel_Pile_LocalityKind.htm" target="">LocalityKind</a></td><td><div class="summary">
            Indicates where pile implementation stores data: local vs distributed
            </div></td></tr><tr data="enumeration; public"><td><img src="./../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_NFX_ApplicationModel_Pile_ObjectPersistence.htm" target="">ObjectPersistence</a></td><td><div class="summary">
            Denotes modes of object persistence
            </div></td></tr><tr data="enumeration; public"><td><img src="./../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_NFX_ApplicationModel_Pile_PutResult.htm" target="">PutResult</a></td><td><div class="summary">
            Denotes statuses of cache table Put
            </div></td></tr></table></div></div></div></div><div id="OH_footer" class="OH_footer"><p /><p><a href="http://www.itadapter.com" target="_blank"><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /> 
						Copyright © 2006-2017 ITAdapter Corp Inc. (http://www.itadapter.com)</a></p><div class="OH_feedbacklink"><a href="mailto:nfx@itadapter.com?subject=NFX+Class+Library+NFX.ApplicationModel.Pile+Namespace+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic to Contact Us.</div></div></body></html>