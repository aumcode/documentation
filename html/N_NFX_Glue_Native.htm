<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>NFX.Glue.Native Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="NFX.Glue.Native namespace" /><meta name="Microsoft.Help.F1" content="NFX.Glue.Native" /><meta name="Microsoft.Help.Id" content="N:NFX.Glue.Native" /><meta name="Description" content="Provides implementations for NFX-native Glue bindings whoch are based on NFX.Serialization and TCP/IP sockets" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="NFX.Glue.Native" /><meta name="file" content="N_NFX_Glue_Native" /><meta name="guid" content="N_NFX_Glue_Native" /><link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdLogoColumn"><img src="./../icons/NFX.logo.35.png" /></td><td class="OH_tdTitleColumn">NFX.Glue.Native Namespace</td><td class="OH_tdRunningTitleColumn">NFX Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p><div class="summary">Provides implementations for NFX-native Glue bindings whoch are based on NFX.Serialization and TCP/IP sockets</div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Classes</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="typeList" class="members"><tr><th class="ps_iconColumn">
					 
				</th><th class="ps_nameColumn">Class</th><th class="ps_descriptionColumn">Description</th></tr><tr data="class; public"><td><img src="./../icons/protclass.gif" alt="Protected class" title="Protected class" /></td><td><a href="T_NFX_Glue_Native_Consts.htm" target="">Consts</a></td><td><div class="summary">
            Constants common to Native/Socket-based family of technologies
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_InProcBinding.htm" target="">InProcBinding</a></td><td><div class="summary">
            Provides synchronous communication pattern based on in-memory message exchange without serialization.
            This binding is usable for interconnection between NFX-native components in the same app domain
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_InProcClientTransport.htm" target="">InProcClientTransport</a></td><td><div class="summary">
            Provides client-side functionality for synchronous communication pattern based on
             in-memory message exchange without serialization
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_InProcServerTransport.htm" target="">InProcServerTransport</a></td><td><div class="summary">
            Provides server-side functionality for synchronous communication pattern based on
             in-memory message exchange without serialization
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_MemChunk.htm" target="">MemChunk</a></td><td><div class="summary">
            Represents a stream/writable chunk of memory backed by an array buffer
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_MpxBinding.htm" target="">MpxBinding</a></td><td><div class="summary">
            Provides asynchronous communicating pattern based on asynchronous virtual socket.
            The concrete socket may be based on OS-supported technology i.e. -  IO completion ports on Windows
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_MpxClientSocket.htm" target="">MpxClientSocket</a></td><td><div class="summary">
            Represents client-side asynchronous socket. This socket initiates a connection to MpxServerSocket
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_MpxClientTransport.htm" target="">MpxClientTransport</a></td><td><div class="summary">
            Implements asynchronous MPX client transport for MpxBinding
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_MpxListener.htm" target="">MpxListener</a></td><td><div class="summary">
            Represents a server-side listener socket that accepts the calls
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_MpxServerSocket.htm" target="">MpxServerSocket</a></td><td><div class="summary">
            Represents server-side asynchronous socket that clients connect to
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_MpxServerTransport.htm" target="">MpxServerTransport</a></td><td><div class="summary">
            Implements asynchronous MPX server transport for MpxBinding
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_MpxSocket_1.htm" target="">MpxSocket<span id="ID0ECABJAEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECABJAEAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>TTransport<span id="ID0EAABJAEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAABJAEAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></a></td><td><div class="summary">
            Base for MpxSockets implementation. An MpxSocket represents an asynchronous bi-directional channel of communication
            that delivers binary/wire messages of flexible size.
            The socket is NOT THREAD SAFE for calling Send() from parallel threads. Send() is done synchronously on the
            calling thread, i.e. the sender waits until the data is written into the OS socket buff.
             Receive is invoked by internal/system/io thread asynchronously and should not block for long (seconds)
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_MpxSocketFactory.htm" target="">MpxSocketFactory</a></td><td><div class="summary">
            Defines factory abstraction that creates socket per particular technology
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_MpxWinClientSocket.htm" target="">MpxWinClientSocket</a></td><td><div class="summary">
            Implements a MPX client socket using Windows IO completion ports for receive
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_MpxWinListener.htm" target="">MpxWinListener</a></td><td><div class="summary">
            Implements a MPX socket listener that accepts connections into MpxWinServerSocket
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_MpxWinServerSocket.htm" target="">MpxWinServerSocket</a></td><td><div class="summary">
            Implements a MPX server socket using Windows IO completion ports for receive
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_MpxWinSocketFactory.htm" target="">MpxWinSocketFactory</a></td><td><div class="summary">
            Factory that makes MpxWin sockets based on Windows-IO completion ports
            </div></td></tr><tr data="class; public"><td><img src="./../icons/protclass.gif" alt="Protected class" title="Protected class" /></td><td><a href="T_NFX_Glue_Native_SocketState.htm" target="">SocketState</a></td><td></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_SyncBinding.htm" target="">SyncBinding</a></td><td><div class="summary">
            Provides synchronous communication pattern based on TCP blocking sockets and Slim serializer
            for maximum serialization performance and lowest latency.
            This binding is usable for interconnection between NFX-native components on LANs (i.e. server clusters)
            in scenarios when low latency is more important than total call invocation throughput
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_SyncClientTransport.htm" target="">SyncClientTransport</a></td><td><div class="summary">
            Provides client-side functionality for synchronous communication pattern based on TCP blocking sockets and Slim serializer
            for maximum serialization performance and lowest latency.
            The SyncBinding is usable for interconnection between NFX-native components on LANs (i.e. server clusters) in scenarios when
             low latency is more important than total call invocation throughput
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Glue_Native_SyncServerTransport.htm" target="">SyncServerTransport</a></td><td><div class="summary">
            Provides server-side functionality for synchronous communication pattern based on TCP blocking sockets and Slim serializer
            for maximum serialization performance and lowest latency.
            The SyncBinding is usable for interconnection between NFX-native components on LANs (i.e. server clusters) in scenarios when
             low latency is more important than total call invocation throughput.
            SyncServerTransport uses dedicated thread for request processing and is not scalable beyond a few hundred connections by design,
             however it provides low latency benefit
            </div></td></tr></table><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Structures</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="typeList" class="members"><tr><th class="ps_iconColumn">
					 
				</th><th class="ps_nameColumn">Structure</th><th class="ps_descriptionColumn">Description</th></tr><tr data="structure; public"><td><img src="./../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_NFX_Glue_Native_ClientSite.htm" target="">ClientSite</a></td><td><div class="summary">
            Represents a client call site identifier which gets generated on client and sent to server upon handshake.
            This struct identifies the calling client by supplying machine/host name and calling application instance ID
            </div></td></tr><tr data="structure; public"><td><img src="./../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_NFX_Glue_Native_WireFrame.htm" target="">WireFrame</a></td><td><div class="summary">
             This struct defines a frame transmitted as a part of WireMsg
             which can be used for transport or session management needs
             </div></td></tr><tr data="structure; public"><td><img src="./../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_NFX_Glue_Native_WireMsg.htm" target="">WireMsg</a></td><td><div class="summary">
            Represents a message that is transmitted over the wire:
            </div></td></tr></table><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Interfaces</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="typeList" class="members"><tr><th class="ps_iconColumn">
					 
				</th><th class="ps_nameColumn">Interface</th><th class="ps_descriptionColumn">Description</th></tr><tr data="interface; public"><td><img src="./../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_NFX_Glue_Native_IMpxTransport.htm" target="">IMpxTransport</a></td><td></td></tr></table><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Delegates</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="typeList" class="members"><tr><th class="ps_iconColumn">
					 
				</th><th class="ps_nameColumn">Delegate</th><th class="ps_descriptionColumn">Description</th></tr><tr data="delegate; public"><td><img src="./../icons/pubdelegate.gif" alt="Public delegate" title="Public delegate" /></td><td><a href="T_NFX_Glue_Native_MpxSocketReceiveAction_1.htm" target="">MpxSocketReceiveAction<span id="ID0ECABAABAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECABAABAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>TTransport<span id="ID0EAABAABAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAABAABAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></a></td><td><div class="summary">
            Delivers wire msg from another side. DO NOT use WireMsg beyound the implementation of this delegate,
             if needed make a copy of msg.Data as the memory will be freed after this call returns
            </div></td></tr></table><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Enumerations</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="typeList" class="members"><tr><th class="ps_iconColumn">
					 
				</th><th class="ps_nameColumn">Enumeration</th><th class="ps_descriptionColumn">Description</th></tr><tr data="enumeration; public"><td><img src="./../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_NFX_Glue_Native_FrameType.htm" target="">FrameType</a></td><td><div class="summary">
            Type of transport frame message
            </div></td></tr></table></div></div></div></div><div id="OH_footer" class="OH_footer"><p /><p><a href="http://www.itadapter.com" target="_blank"><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /> 
						Copyright © 2006-2017 ITAdapter Corp Inc. (http://www.itadapter.com)</a></p><div class="OH_feedbacklink"><a href="mailto:nfx@itadapter.com?subject=NFX+Class+Library+NFX.Glue.Native+Namespace+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic to Contact Us.</div></div></body></html>