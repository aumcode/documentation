<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>WorkContext Properties</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="WorkContext class, properties" /><meta name="Microsoft.Help.Id" content="Properties.T:NFX.Wave.WorkContext" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="NFX.Wave" /><meta name="file" content="Properties_T_NFX_Wave_WorkContext" /><meta name="guid" content="Properties_T_NFX_Wave_WorkContext" /><link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdLogoColumn"><img src="./../icons/NFX.logo.35.png" /></td><td class="OH_tdTitleColumn">WorkContext Properties</td><td class="OH_tdRunningTitleColumn">NFX Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p>The <a href="T_NFX_Wave_WorkContext.htm" target="">WorkContext</a> type exposes the following members.<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Properties</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="memberList" class="members"><tr><th class="ps_iconColumn">
							 
						</th><th class="ps_nameColumn">Name</th><th class="ps_descriptionColumn">Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_Aborted.htm" target="">Aborted</a></td><td><div class="summary">
            Indicates whether the work context is logically finished and its nested processing (i.e. through Filters/Handlers) should stop.
            For example, when some filter detects a special condition (judging by the request) and generates the response
             and needs to abort the work request so it does no get filtered/processed anymore, it can set this property to true.
            This mechanism performs much better than throwing exceptions
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_About.htm" target="">About</a></td><td><div class="summary">
            Generates short context description
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_DisposableObject_Disposed.htm" target="">Disposed</a></td><td><div class="summary">
            Indicates whether this object was already disposed - the Dispose() has finished
            </div> (Inherited from <a href="T_NFX_DisposableObject.htm" target="">DisposableObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_DisposableObject_DisposeStarted.htm" target="">DisposeStarted</a></td><td><div class="summary">
            Indicates whether this object Dispose() has been called and dispose started but not finished yet
            </div> (Inherited from <a href="T_NFX_DisposableObject.htm" target="">DisposableObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_EffectiveCallerIPEndPoint.htm" target="">EffectiveCallerIPEndPoint</a></td><td><div class="summary">
            Returns the effective caller endpoint- that is, if the real caller filter is set it will inject the real IP
            as seen before any proxy devices. By default this property returns the Request.RemoteEndPoint
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_GeoEntity.htm" target="">GeoEntity</a></td><td><div class="summary">
            Gets sets geo location information as detected by GeoLookupHandler.
            If Session context is injected then get/set passes through into session object
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_Handled.htm" target="">Handled</a></td><td><div class="summary">
            Returns true when the work has been executed by the WorkHandler instance
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_Handler.htm" target="">Handler</a></td><td><div class="summary">
            Returns the work handler instance that was matched to perform work on this context or null if the match has not been made yet
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_ID.htm" target="">ID</a></td><td><div class="summary">
            Uniquely identifies the request
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_IsAuthenticated.htm" target="">IsAuthenticated</a></td><td><div class="summary">
            Returns true to indicate that this context is/was authenticated.
            Used to not redirect users to login page on authorization exception
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_IsDELETE.htm" target="">IsDELETE</a></td><td><div class="summary">
            Indicates that request method id DELETE
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_IsGET.htm" target="">IsGET</a></td><td><div class="summary">
            Indicates that request method id GET
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_IsPATCH.htm" target="">IsPATCH</a></td><td><div class="summary">
            Indicates that request method id PATCH
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_IsPOST.htm" target="">IsPOST</a></td><td><div class="summary">
            Indicates that request method id POST
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_IsPUT.htm" target="">IsPUT</a></td><td><div class="summary">
            Indicates that request method id PUT
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_Items.htm" target="">Items</a></td><td><div class="summary">
            Provides a thread-safe dictionary of items. The underlying collection is lazily allocated
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_LastError.htm" target="">LastError</a></td><td><div class="summary">
            Captures last error
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_Match.htm" target="">Match</a></td><td><div class="summary">
            Returns the work match instances that was made for this requested work or null if nothing was matched yet
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_Matched.htm" target="">Matched</a></td><td><div class="summary">
            Returns dynamic object that contains variables that have been extracted by WorkMatch when dispatcher assigned request to WorkHandler.
            If variables have not been assigned yet returns empty object
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_MatchedVars.htm" target="">MatchedVars</a></td><td><div class="summary">
            Returns variables that have been extracted by WorkMatch when dispatcher assigned request to WorkHandler.
            If variables have not been assigned yet returns empty object
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_NoDefaultAutoClose.htm" target="">NoDefaultAutoClose</a></td><td><div class="summary">
            Indicates whether the default dispatcher should close the WorkContext upon completion of async processing.
            This property may ONLY be set to TRUE IF Response.Buffered = false (chunked transfer) and Response has already been written to.
            When this property is set to true the WorkDispatcher will not auto dispose this WorkContext instance.
            This may be needed for a server that streams chat messages and some other thread manages the lifetime of this WorkContext.
            Keep in mind that alternative implementations of WorkDispatcher (derived classes that implement alternative threading/lifecycle)
             may disregard this flag altogether
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_Portal.htm" target="">Portal</a></td><td><div class="summary">
            Returns portal object for this request or null if no portal was injected
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_PortalFilter.htm" target="">PortalFilter</a></td><td><div class="summary">
            Returns the first portal filter which was injected in the processing line.
            It is the filter that manages the portals for this context
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_PortalMatch.htm" target="">PortalMatch</a></td><td><div class="summary">
            Returns matched that was made by portal filter or null
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_PortalMatchedVars.htm" target="">PortalMatchedVars</a></td><td><div class="summary">
            Returns variables that have been extracted by WorkMatch when PortalFilter assigned portal.
            Returns null if no portal was matched
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_PortalTheme.htm" target="">PortalTheme</a></td><td><div class="summary">
            Gets/sets portal theme. This may be null as this is just a holder variable
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_Request.htm" target="">Request</a></td><td><div class="summary">
            Returns HttpListenerRequest object for this context
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_RequestBodyAsJSONDataMap.htm" target="">RequestBodyAsJSONDataMap</a></td><td><div class="summary">
            Fetches request body: multipart content, url encoded content, or JSON body into one JSONDataMap bag,
            or null if there is no body.
            The property does caching
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_RequestedJSON.htm" target="">RequestedJSON</a></td><td><div class="summary">
            Returns true if client indicated in response that "application/json" is accepted
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_Response.htm" target="">Response</a></td><td><div class="summary">
            Returns Response object for this context
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_Server.htm" target="">Server</a></td><td><div class="summary">
            Returns the server this context is under
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_Session.htm" target="">Session</a></td><td><div class="summary">
            Returns session that this context is linked with or null
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_SessionFilter.htm" target="">SessionFilter</a></td><td><div class="summary">
            Returns the first session filter which was injected in the processing line.
            It is the filter that manages the session state for this context
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_SupportsSession.htm" target="">SupportsSession</a></td><td><div class="summary">
            Returns true when the context was configured to support SessionFilter so Session can be injected
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_WholeRequestAsJSONDataMap.htm" target="">WholeRequestAsJSONDataMap</a></td><td><div class="summary">
            Fetches matched vars, multipart content, url encoded content, or JSON body into one JSONDataMap bag.
            The property does caching
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Wave_WorkContext_WorkSemaphoreReleased.htm" target="">WorkSemaphoreReleased</a></td><td><div class="summary">
            Returns true to indicate that work semaphore has been already released.
            It is not necessary to use this property or ReleaseWorkSemaphore() method as the framework does it
             automatically in 99% cases. ReleaseWorkSemaphore() may need to be called from special places like HTTP streaming
              servers that need to keep WorkContext instances open for a long time
            </div></td></tr></table><a href="#mainBody" target="">Back to Top</a><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="T_NFX_Wave_WorkContext.htm" target="">WorkContext Class</a></div><div class="seeAlsoStyle"><a href="N_NFX_Wave.htm" target="">NFX.Wave Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p /><p><a href="http://www.itadapter.com" target="_blank"><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /> 
						Copyright © 2006-2017 ITAdapter Corp Inc. (http://www.itadapter.com)</a></p><div class="OH_feedbacklink"><a href="mailto:nfx@itadapter.com?subject=NFX+Class+Library+WorkContext+Properties+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic to Contact Us.</div></div></body></html>