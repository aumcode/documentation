<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>IPileImplementation Members</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IPileImplementation interface" /><meta name="System.Keywords" content="IPileImplementation interface, all members" /><meta name="System.Keywords" content="NFX.ApplicationModel.Pile.IPileImplementation interface" /><meta name="Microsoft.Help.Id" content="AllMembers.T:NFX.ApplicationModel.Pile.IPileImplementation" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="NFX.ApplicationModel.Pile" /><meta name="file" content="AllMembers_T_NFX_ApplicationModel_Pile_IPileImplementation" /><meta name="guid" content="AllMembers_T_NFX_ApplicationModel_Pile_IPileImplementation" /><link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdLogoColumn"><img src="./../icons/NFX.logo.35.png" /></td><td class="OH_tdTitleColumn">IPileImplementation Members</td><td class="OH_tdRunningTitleColumn">NFX Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p>The <a href="T_NFX_ApplicationModel_Pile_IPileImplementation.htm" target="">IPileImplementation</a> type exposes the following members.<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Methods</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="memberList" class="members"><tr><th class="ps_iconColumn">
							 
						</th><th class="ps_nameColumn">Name</th><th class="ps_descriptionColumn">Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ServiceModel_IService_CheckForCompleteStop.htm" target="">CheckForCompleteStop</a></td><td><div class="summary">
            Non-blocking call that returns true when the service instance has completely stopped after SignalStop()
            </div> (Inherited from <a href="T_NFX_ServiceModel_IService.htm" target="">IService</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ApplicationModel_Pile_IPile_Compact.htm" target="">Compact</a></td><td><div class="summary">
            Tries to delete extra capacity which is allocated but not currently needed.
            Returns the number of bytes freed back to the system
            </div> (Inherited from <a href="T_NFX_ApplicationModel_Pile_IPile.htm" target="">IPile</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Environment_IConfigurable_Configure.htm" target="">Configure</a></td><td><div class="summary">
            Configures an entity from supplied config node
            </div> (Inherited from <a href="T_NFX_Environment_IConfigurable.htm" target="">IConfigurable</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ApplicationModel_Pile_IPile_Delete.htm" target="">Delete</a></td><td><div class="summary">
            Deletes object from pile by its pointer returning true if there is no access violation
            and pointer is pointing to the valid object, throws otherwise unless
            throwInvalid is set to false
            </div> (Inherited from <a href="T_NFX_ApplicationModel_Pile_IPile.htm" target="">IPile</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/es4s3w1d" target="_blank">Dispose</a></td><td><div class="summary">Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</div> (Inherited from <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_IExternallyParameterized_ExternalGetParameter.htm" target="">ExternalGetParameter</a></td><td><div class="summary">
            Gets external parameter value returning true if parameter was found
            </div> (Inherited from <a href="T_NFX_IExternallyParameterized.htm" target="">IExternallyParameterized</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_IExternallyParameterized_ExternalParametersForGroups.htm" target="">ExternalParametersForGroups</a></td><td><div class="summary">
            Gets names of supported external parameters or null if parameters are not supported in principle
            </div> (Inherited from <a href="T_NFX_IExternallyParameterized.htm" target="">IExternallyParameterized</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_IExternallyParameterized_ExternalSetParameter.htm" target="">ExternalSetParameter</a></td><td><div class="summary">
            Sets external parameter value, true if parameter name was found and set succeeded
            </div> (Inherited from <a href="T_NFX_IExternallyParameterized.htm" target="">IExternallyParameterized</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ApplicationModel_Pile_IPile_Get.htm" target="">Get</a></td><td><div class="summary">
            Returns a CLR object by its pointer or throws access violation if pointer is invalid
            </div> (Inherited from <a href="T_NFX_ApplicationModel_Pile_IPile.htm" target="">IPile</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ApplicationModel_Pile_IPile_GetRawBuffer.htm" target="">GetRawBuffer</a></td><td><div class="summary">
            Returns a raw byte[] occupied by the object payload, only payload is returned along with serializer flag
            which tells what kind of serializer was used.
            This method is rarely used, it is needed for debugging and special-case "direct" memory access on read
            to bypass the de-serialization process altogether
            </div> (Inherited from <a href="T_NFX_ApplicationModel_Pile_IPile.htm" target="">IPile</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ApplicationModel_Pile_IPile_Purge.htm" target="">Purge</a></td><td><div class="summary">
            Deletes all objects freeing all segment memory buffers.
            This method may require the caller to have special rights
            </div> (Inherited from <a href="T_NFX_ApplicationModel_Pile_IPile.htm" target="">IPile</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ApplicationModel_Pile_IPile_Put.htm" target="">Put</a></td><td><div class="summary">
            Puts a CLR object into the pile and returns a newly-allocated pointer.
            Throws out-of-space if there is not enough space in the pile and limits are set.
            Optional lifeSpanSec will auto-delete object after the interval elapses if
             the pile SupportsObjectExpiration and SweepExpireObjects is set to true
            </div> (Inherited from <a href="T_NFX_ApplicationModel_Pile_IPile.htm" target="">IPile</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ApplicationModel_Pile_IPile_Rejuvenate.htm" target="">Rejuvenate</a></td><td><div class="summary">
            If pile supports expiration, resets object age to zero.
            Returns true if object was found and reset. N/A for pile that do not support expiration
            </div> (Inherited from <a href="T_NFX_ApplicationModel_Pile_IPile.htm" target="">IPile</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ServiceModel_IService_SignalStop.htm" target="">SignalStop</a></td><td><div class="summary">
            Non-blocking call that initiates the stopping of the service
            </div> (Inherited from <a href="T_NFX_ServiceModel_IService.htm" target="">IService</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ApplicationModel_Pile_IPile_SizeOf.htm" target="">SizeOf</a></td><td><div class="summary">
            Returns the size of pointed-to object in bytes or throws access violation if pointer is invalid.
            The serialized object size is returned, not the CLR object size.
            </div> (Inherited from <a href="T_NFX_ApplicationModel_Pile_IPile.htm" target="">IPile</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ServiceModel_IService_Start.htm" target="">Start</a></td><td><div class="summary">
            Blocking call that starts the service instance
            </div> (Inherited from <a href="T_NFX_ServiceModel_IService.htm" target="">IService</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ServiceModel_IService_WaitForCompleteStop.htm" target="">WaitForCompleteStop</a></td><td><div class="summary">
            Blocks execution of current thread until this service has completely stopped
            </div> (Inherited from <a href="T_NFX_ServiceModel_IService.htm" target="">IService</a>.)</td></tr></table><a href="#mainBody" target="">Back to Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Properties</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="memberList" class="members"><tr><th class="ps_iconColumn">
							 
						</th><th class="ps_nameColumn">Name</th><th class="ps_descriptionColumn">Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_Pile_IPileStatus_AllocatedMemoryBytes.htm" target="">AllocatedMemoryBytes</a></td><td><div class="summary">
            Returns the number of bytes allocated by this pile from system memory
            </div> (Inherited from <a href="T_NFX_ApplicationModel_Pile_IPileStatus.htm" target="">IPileStatus</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_Pile_IPileImplementation_AllocMode.htm" target="">AllocMode</a></td><td><div class="summary">
            Defines modes of allocation: space/time tradeoff
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_IApplicationComponent_ComponentCommonName.htm" target="">ComponentCommonName</a></td><td><div class="summary">
            Returns the common name used to identify the component, for example "Glue" for various IGlue implementations.
            This name is searched-by some management tools that allow to find component by this name that does not change between
            application restarts like ComponentSID does. Subordinate (non-root) components return null
            </div> (Inherited from <a href="T_NFX_ApplicationModel_IApplicationComponent.htm" target="">IApplicationComponent</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_IApplicationComponent_ComponentDirector.htm" target="">ComponentDirector</a></td><td><div class="summary">
            Returns a reference to an object that this app component services/operates under, or null
            </div> (Inherited from <a href="T_NFX_ApplicationModel_IApplicationComponent.htm" target="">IApplicationComponent</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_IApplicationComponent_ComponentSID.htm" target="">ComponentSID</a></td><td><div class="summary">
            Returns process/instance unique app component system id
            </div> (Inherited from <a href="T_NFX_ApplicationModel_IApplicationComponent.htm" target="">IApplicationComponent</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_IExternallyParameterized_ExternalParameters.htm" target="">ExternalParameters</a></td><td><div class="summary">
            Gets names/types of supported external parameters or null if parameters are not supported in principle
            </div> (Inherited from <a href="T_NFX_IExternallyParameterized.htm" target="">IExternallyParameterized</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Instrumentation_IInstrumentable_InstrumentationEnabled.htm" target="">InstrumentationEnabled</a></td><td><div class="summary">
            Turns on/off instrumentation
            </div> (Inherited from <a href="T_NFX_Instrumentation_IInstrumentable.htm" target="">IInstrumentable</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_Pile_IPileStatus_Locality.htm" target="">Locality</a></td><td><div class="summary">
            Returns whether pile is local or distributed
            </div> (Inherited from <a href="T_NFX_ApplicationModel_Pile_IPileStatus.htm" target="">IPileStatus</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_Pile_IPileImplementation_MaxMemoryLimit.htm" target="">MaxMemoryLimit</a></td><td><div class="summary">
            Imposes a limit on maximum number of bytes that a pile can allocate of the system heap.
            The default value of 0 means no limit, meaning - the pile will keep allocating objects
            until the system allows
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_Pile_IPileImplementation_MaxSegmentLimit.htm" target="">MaxSegmentLimit</a></td><td><div class="summary">
            Gets the maximum count of segments that this pile can have.
            The property is not thread-safe for set and can only be set if pile is inactive.
            The value of zero means no limit
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_Pile_IPileStatus_MemoryCapacityBytes.htm" target="">MemoryCapacityBytes</a></td><td><div class="summary">
            Returns an approximate capacity of free memory that the system has left
            </div> (Inherited from <a href="T_NFX_ApplicationModel_Pile_IPileStatus.htm" target="">IPileStatus</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_INamed_Name.htm" target="">Name</a></td><td> (Inherited from <a href="T_NFX_INamed.htm" target="">INamed</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_Pile_IPileStatus_NodeCount.htm" target="">NodeCount</a></td><td><div class="summary">
            Returns the number of nodes(servers) that service this distributed pile.
            If this pile locality is local then returns 1
            </div> (Inherited from <a href="T_NFX_ApplicationModel_Pile_IPileStatus.htm" target="">IPileStatus</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_Pile_IPileStatus_ObjectCount.htm" target="">ObjectCount</a></td><td><div class="summary">
            Returns the number of allocated objects in this pile
            </div> (Inherited from <a href="T_NFX_ApplicationModel_Pile_IPileStatus.htm" target="">IPileStatus</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_Pile_IPileStatus_OverheadBytes.htm" target="">OverheadBytes</a></td><td><div class="summary">
            Returns the number of extra bytes used by pile metadata currently occupied by object stored in this pile
            </div> (Inherited from <a href="T_NFX_ApplicationModel_Pile_IPileStatus.htm" target="">IPileStatus</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_Pile_IPileStatus_Persistence.htm" target="">Persistence</a></td><td><div class="summary">
            Returns the model of object persistence that this pile supports
            </div> (Inherited from <a href="T_NFX_ApplicationModel_Pile_IPileStatus.htm" target="">IPileStatus</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ServiceModel_IService_Running.htm" target="">Running</a></td><td><div class="summary">
            Returns true when service is active or about to become active.
            Check in service implementation loops/threads/tasks
            </div> (Inherited from <a href="T_NFX_ServiceModel_IService.htm" target="">IService</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_Pile_IPileStatus_SegmentCount.htm" target="">SegmentCount</a></td><td><div class="summary">
            Returns the number of segments allocated
            </div> (Inherited from <a href="T_NFX_ApplicationModel_Pile_IPileStatus.htm" target="">IPileStatus</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_Pile_IPileImplementation_SegmentSize.htm" target="">SegmentSize</a></td><td><div class="summary">
            Gets the segment size in bytes, up to (2^31)-1
            The property is not thread-safe for set and can only be set if pile is inactive
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ServiceModel_IService_Status.htm" target="">Status</a></td><td><div class="summary">
            Current service status
            </div> (Inherited from <a href="T_NFX_ServiceModel_IService.htm" target="">IService</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_Pile_IPileStatus_SupportsObjectExpiration.htm" target="">SupportsObjectExpiration</a></td><td><div class="summary">
            Returns whether this instance supports object expiration
            </div> (Inherited from <a href="T_NFX_ApplicationModel_Pile_IPileStatus.htm" target="">IPileStatus</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_Pile_IPileImplementation_SweepExpiredObjects.htm" target="">SweepExpiredObjects</a></td><td><div class="summary">
            Control whether the instance respects object life spans
            if they are set
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_Pile_IPileStatus_UtilizedBytes.htm" target="">UtilizedBytes</a></td><td><div class="summary">
            Returns the number of bytes allocated for object storage within AllocatedMemoryBytes
            </div> (Inherited from <a href="T_NFX_ApplicationModel_Pile_IPileStatus.htm" target="">IPileStatus</a>.)</td></tr></table><a href="#mainBody" target="">Back to Top</a><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="T_NFX_ApplicationModel_Pile_IPileImplementation.htm" target="">IPileImplementation Interface</a></div><div class="seeAlsoStyle"><a href="N_NFX_ApplicationModel_Pile.htm" target="">NFX.ApplicationModel.Pile Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p /><p><a href="http://www.itadapter.com" target="_blank"><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /> 
						Copyright © 2006-2017 ITAdapter Corp Inc. (http://www.itadapter.com)</a></p><div class="OH_feedbacklink"><a href="mailto:nfx@itadapter.com?subject=NFX+Class+Library+IPileImplementation+Members+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic to Contact Us.</div></div></body></html>