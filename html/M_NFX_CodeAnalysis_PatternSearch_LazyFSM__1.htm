<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>PatternSearch.LazyFSM(TToken) Method (IEnumerable(TToken), LazyFSMPredicate(TToken)[])</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:NFX.CodeAnalysis.PatternSearch.LazyFSM``1(System.Collections.Generic.IEnumerable{``0},NFX.CodeAnalysis.LazyFSMPredicate{``0}[])" /><meta name="Description" content="Makes finite state machine fed from IEnumerable(Token) only considering primary language tokens" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="NFX.CodeAnalysis" /><meta name="file" content="M_NFX_CodeAnalysis_PatternSearch_LazyFSM__1" /><meta name="guid" content="M_NFX_CodeAnalysis_PatternSearch_LazyFSM__1" /><link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdLogoColumn"><img src="./../icons/NFX.logo.35.png" /></td><td class="OH_tdTitleColumn">PatternSearch<span id="ID0EQBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EQBABAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>LazyFSM<span id="ID0EOBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EOBABAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="typeparameter">TToken</span><span id="ID0EMBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EMBABAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Method (IEnumerable<span id="ID0EKBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EKBABAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="typeparameter">TToken</span><span id="ID0EIBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EIBABAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script>, <span id="ID0EGBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EGBABAAA?vb=|cpp=array&lt;|cs=|fs=|nu=");
				</script>LazyFSMPredicate<span id="ID0EEBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEBABAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="typeparameter">TToken</span><span id="ID0ECBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECBABAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><span id="ID0EBBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBABAAA?vb=()|cpp=&gt;|cs=[]|fs=[]|nu=[]");
				</script>)</td><td class="OH_tdRunningTitleColumn">NFX Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p><div class="summary">
            Makes finite state machine fed from IEnumerable(Token) only considering primary language tokens
            </div><p></p><b>Namespace:</b> <a href="N_NFX_CodeAnalysis.htm" target="">NFX.CodeAnalysis</a><br /><b>Assembly:</b> <span sdata="assembly">NFX</span> (in NFX.dll) Version: 3.0.0.1 (3.0.0.1)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EDSCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EDSCAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EDSCAAAAA_tabimgleft"></div><div id="ID0EDSCAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDSCAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EDSCAAAAA_tab2" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDSCAAAAA','Visual Basic','2','4');return false;">VB</a></div><div id="ID0EDSCAAAAA_tab3" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDSCAAAAA','Visual C++','3','4');return false;">C++</a></div><div id="ID0EDSCAAAAA_tab4" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDSCAAAAA','F#','4','4');return false;">F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EDSCAAAAA_tabimgright"></div></div><div id="ID0EDSCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EDSCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EDSCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EDSCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EDSCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EDSCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EDSCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EDSCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="keyword">public</span> <span class="keyword">static</span> TToken <span class="identifier">LazyFSM</span>&lt;TToken&gt;(
	<span class="keyword">this</span> <span class="identifier">IEnumerable</span>&lt;TToken&gt; <span class="parameter">tokens</span>,
	<span class="keyword">params</span> <span class="identifier">LazyFSMPredicate</span>&lt;TToken&gt;[] <span class="parameter">predicates</span>
)
<span class="keyword">where</span> TToken : <span class="identifier">Token</span></pre></div><div id="ID0EDSCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public static TToken LazyFSM&lt;TToken&gt;(
	this IEnumerable&lt;TToken&gt; tokens,
	params LazyFSMPredicate&lt;TToken&gt;[] predicates
)
where TToken : Token</pre></div><div id="ID0EDSCAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>&lt;<span class="identifier">ExtensionAttribute</span>&gt; 
<span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">LazyFSM</span>(<span class="keyword">Of</span> TToken <span class="keyword">As</span> <span class="identifier">Token</span>) ( 
	<span class="parameter">tokens</span> <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> TToken),
	<span class="keyword">ParamArray</span> <span class="parameter">predicates</span> <span class="keyword">As</span> <span class="identifier">LazyFSMPredicate</span>(<span class="keyword">Of</span> TToken)()
) <span class="keyword">As</span> TToken</pre></div><div id="ID0EDSCAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>&lt;ExtensionAttribute&gt; 
Public Shared Function LazyFSM(Of TToken As Token) ( 
	tokens As IEnumerable(Of TToken),
	ParamArray predicates As LazyFSMPredicate(Of TToken)()
) As TToken</pre></div><div id="ID0EDSCAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">public</span>:
[<span class="identifier">ExtensionAttribute</span>]
<span class="keyword">generic</span>&lt;<span class="keyword">typename</span> TToken&gt;
<span class="keyword">where</span> TToken : <span class="identifier">Token</span> 
<span class="keyword">static</span> TToken <span class="identifier">LazyFSM</span>(
	<span class="identifier">IEnumerable</span>&lt;TToken&gt;^ <span class="parameter">tokens</span>, 
	... <span class="keyword">array</span>&lt;<span class="identifier">LazyFSMPredicate</span>&lt;TToken&gt;^&gt;^ <span class="parameter">predicates</span>
)</pre></div><div id="ID0EDSCAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public:
[ExtensionAttribute]
generic&lt;typename TToken&gt;
where TToken : Token 
static TToken LazyFSM(
	IEnumerable&lt;TToken&gt;^ tokens, 
	... array&lt;LazyFSMPredicate&lt;TToken&gt;^&gt;^ predicates
)</pre></div><div id="ID0EDSCAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">LazyFSM</span> : 
        <span class="parameter">tokens</span> : <span class="identifier">IEnumerable</span>&lt;'TToken&gt; * 
        <span class="parameter">predicates</span> : <span class="identifier">LazyFSMPredicate</span>&lt;'TToken&gt;[] <span class="keyword">-&gt;</span> 'TToken  <span class="keyword">when</span> 'TToken : <span class="identifier">Token</span></pre></div><div id="ID0EDSCAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre>static member LazyFSM : 
        tokens : IEnumerable&lt;'TToken&gt; * 
        predicates : LazyFSMPredicate&lt;'TToken&gt;[] -&gt; 'TToken  when 'TToken : Token</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EDSCAAAAA');</script></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="tokens"><dt><span class="parameter">tokens</span></dt><dd>Type: <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">System.Collections.Generic<span id="ID0EBFABRCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBFABRCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>IEnumerable</a><span id="ID0EEABRCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEABRCAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="selflink"><span class="typeparam">TToken</span></span><span id="ID0ECABRCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECABRCAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><br /><span>Token enumerable</span></dd></dl><dl paramName="predicates"><dt><span class="parameter">predicates</span></dt><dd>Type: <span id="ID0EHAARCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EHAARCAAAAA?vb=|cpp=array&lt;|cs=|fs=|nu=");
				</script><a href="T_NFX_CodeAnalysis_LazyFSMPredicate_1.htm" target="">NFX.CodeAnalysis<span id="ID0EBGAARCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBGAARCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>LazyFSMPredicate</a><span id="ID0EFAARCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EFAARCAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="selflink"><span class="typeparam">TToken</span></span><span id="ID0EDAARCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDAARCAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><span id="ID0ECAARCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECAARCAAAAA?vb=()|cpp=&gt;|cs=[]|fs=[]|nu=[]");
				</script><br /><span>Predicates that supply machine state transition instructions</span></dd></dl></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Type Parameters</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><dl><dt><span class="parameter">TToken</span></dt><dd>Concrete language-typed token</dd></dl><h4 class="subHeading">Return Value</h4>Type: <span class="selflink"><span class="typeparam">TToken</span></span><br />Resulting token fetched by FSMI.Take instruction or null<h4 class="subHeading">Usage Note</h4>In Visual Basic and C#, you can call this method as an instance method on any object of type <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">IEnumerable</a><span id="ID0EHCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EHCAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="selflink"><span class="typeparam">TToken</span></span><span id="ID0EFCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EFCAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script>. When you use instance method syntax to call this method, omit the first parameter. For more information, see <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn.microsoft.com/en-us/library/bb384936.aspx" target="_blank">Extension Methods (Visual Basic)</a> or <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn.microsoft.com/en-us/library/bb383977.aspx" target="_blank">Extension Methods (C# Programming Guide)</a>.<a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="T_NFX_CodeAnalysis_PatternSearch.htm" target="">PatternSearch Class</a></div><div class="seeAlsoStyle"><a href="AllMembers_T_NFX_CodeAnalysis_PatternSearch.htm" target="">PatternSearch Members</a></div><div class="seeAlsoStyle"><a href="Overload_NFX_CodeAnalysis_PatternSearch_LazyFSM.htm" target="">LazyFSM Overload</a></div><div class="seeAlsoStyle"><a href="N_NFX_CodeAnalysis.htm" target="">NFX.CodeAnalysis Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p /><p><a href="http://www.itadapter.com" target="_blank"><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /> 
						Copyright © 2006-2017 ITAdapter Corp Inc. (http://www.itadapter.com)</a></p><div class="OH_feedbacklink"><a href="mailto:nfx@itadapter.com?subject=NFX+Class+Library+PatternSearch.LazyFSM(TToken)+Method+(IEnumerable(TToken)%2c+LazyFSMPredicate(TToken)%5b%5d)+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic to Contact Us.</div></div></body></html>