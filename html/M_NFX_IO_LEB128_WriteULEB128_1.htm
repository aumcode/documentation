<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>LEB128.WriteULEB128 Method (Byte[], UInt64, Int32, Int32, UInt32)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:NFX.IO.LEB128.WriteULEB128(System.Byte[],System.UInt64,System.Int32@,System.Int32,System.UInt32)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="NFX.IO" /><meta name="file" content="M_NFX_IO_LEB128_WriteULEB128_1" /><meta name="guid" content="M_NFX_IO_LEB128_WriteULEB128_1" /><link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdLogoColumn"><img src="./../icons/NFX.logo.35.png" /></td><td class="OH_tdTitleColumn">LEB128<span id="ID0EHBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EHBABAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>WriteULEB128 Method (<span id="ID0EFBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EFBABAAA?vb=|cpp=array&lt;|cs=|fs=|nu=");
				</script>Byte<span id="ID0EDBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDBABAAA?vb=()|cpp=&gt;|cs=[]|fs=[]|nu=[]");
				</script>, UInt64, Int32<span id="ID0EBBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBABAAA?vb=|cpp=%|cs=|fs=|nu=");
				</script>, Int32, UInt32)</td><td class="OH_tdRunningTitleColumn">NFX Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p><p></p><b>Namespace:</b> <a href="N_NFX_IO.htm" target="">NFX.IO</a><br /><b>Assembly:</b> <span sdata="assembly">NFX</span> (in NFX.dll) Version: 3.0.0.1 (3.0.0.1)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EDHCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EDHCAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EDHCAAAAA_tabimgleft"></div><div id="ID0EDHCAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDHCAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EDHCAAAAA_tab2" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDHCAAAAA','Visual Basic','2','4');return false;">VB</a></div><div id="ID0EDHCAAAAA_tab3" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDHCAAAAA','Visual C++','3','4');return false;">C++</a></div><div id="ID0EDHCAAAAA_tab4" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDHCAAAAA','F#','4','4');return false;">F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EDHCAAAAA_tabimgright"></div></div><div id="ID0EDHCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EDHCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EDHCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EDHCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EDHCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EDHCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EDHCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EDHCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="identifier">WriteULEB128</span>(
	<span class="keyword">this</span> <span class="identifier">byte</span>[] <span class="parameter">buf</span>,
	<span class="identifier">ulong</span> <span class="parameter">value</span>,
	<span class="keyword">out</span> <span class="identifier">int</span> <span class="parameter">count</span>,
	<span class="identifier">int</span> <span class="parameter">idxStart</span> = 0,
	<span class="identifier">uint</span> <span class="parameter">padding</span> = 0
)</pre></div><div id="ID0EDHCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public static void WriteULEB128(
	this byte[] buf,
	ulong value,
	out int count,
	int idxStart = 0,
	uint padding = 0
)</pre></div><div id="ID0EDHCAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>&lt;<span class="identifier">ExtensionAttribute</span>&gt; 
<span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Sub</span> <span class="identifier">WriteULEB128</span> ( 
	<span class="parameter">buf</span> <span class="keyword">As</span> <span class="identifier">Byte</span>(),
	<span class="parameter">value</span> <span class="keyword">As</span> <span class="identifier">ULong</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">count</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	Optional <span class="parameter">idxStart</span> <span class="keyword">As</span> <span class="identifier">Integer</span> = 0,
	Optional <span class="parameter">padding</span> <span class="keyword">As</span> <span class="identifier">UInteger</span> = 0
)</pre></div><div id="ID0EDHCAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>&lt;ExtensionAttribute&gt; 
Public Shared Sub WriteULEB128 ( 
	buf As Byte(),
	value As ULong,
	&lt;OutAttribute&gt; ByRef count As Integer,
	Optional idxStart As Integer = 0,
	Optional padding As UInteger = 0
)</pre></div><div id="ID0EDHCAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">public</span>:
[<span class="identifier">ExtensionAttribute</span>]
<span class="keyword">static</span> <span class="keyword">void</span> <span class="identifier">WriteULEB128</span>(
	<span class="keyword">array</span>&lt;<span class="identifier">unsigned char</span>&gt;^ <span class="parameter">buf</span>, 
	<span class="identifier">unsigned long long</span> <span class="parameter">value</span>, 
	[<span class="identifier">OutAttribute</span>] <span class="identifier">int</span>% <span class="parameter">count</span>, 
	<span class="identifier">int</span> <span class="parameter">idxStart</span> = 0, 
	<span class="identifier">unsigned int</span> <span class="parameter">padding</span> = 0
)</pre></div><div id="ID0EDHCAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public:
[ExtensionAttribute]
static void WriteULEB128(
	array&lt;unsigned char&gt;^ buf, 
	unsigned long long value, 
	[OutAttribute] int% count, 
	int idxStart = 0, 
	unsigned int padding = 0
)</pre></div><div id="ID0EDHCAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">WriteULEB128</span> : 
        <span class="parameter">buf</span> : <span class="identifier">byte</span>[] * 
        <span class="parameter">value</span> : <span class="identifier">uint64</span> * 
        <span class="parameter">count</span> : <span class="identifier">int</span> <span class="keyword">byref</span> * 
        ?<span class="parameter">idxStart</span> : <span class="identifier">int</span> * 
        ?<span class="parameter">padding</span> : <span class="identifier">uint32</span> 
(* Defaults:
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">idxStart</span> = defaultArg <span class="identifier">idxStart</span> 0
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">padding</span> = defaultArg <span class="identifier">padding</span> 0
*)
<span class="keyword">-&gt;</span> <span class="keyword">unit</span></pre></div><div id="ID0EDHCAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre>static member WriteULEB128 : 
        buf : byte[] * 
        value : uint64 * 
        count : int byref * 
        ?idxStart : int * 
        ?padding : uint32 
(* Defaults:
        let _idxStart = defaultArg idxStart 0
        let _padding = defaultArg padding 0
*)
-&gt; unit</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EDHCAAAAA');</script></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="buf"><dt><span class="parameter">buf</span></dt><dd>Type: <span id="ID0EEAEGCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEAEGCAAAAA?vb=|cpp=array&lt;|cs=|fs=|nu=");
				</script><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/yyb1w04y" target="_blank">System<span id="ID0EBDAEGCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBDAEGCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Byte</a><span id="ID0ECAEGCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECAEGCAAAAA?vb=()|cpp=&gt;|cs=[]|fs=[]|nu=[]");
				</script><br /><span></span></dd></dl><dl paramName="value"><dt><span class="parameter">value</span></dt><dd>Type: <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/06cf7918" target="_blank">System<span id="ID0EBCADGCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBCADGCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>UInt64</a><br /><span></span></dd></dl><dl paramName="count"><dt><span class="parameter">count</span></dt><dd>Type: <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">System<span id="ID0EBDACGCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBDACGCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Int32</a><span id="ID0ECACGCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECACGCAAAAA?vb=|cpp=%|cs=|fs=|nu=");
				</script><br /><span></span></dd></dl><dl paramName="idxStart"><dt><span class="parameter">idxStart</span> (Optional)</dt><dd>Type: <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">System<span id="ID0EBCABGCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBCABGCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Int32</a><br /><span></span></dd></dl><dl paramName="padding"><dt><span class="parameter">padding</span> (Optional)</dt><dd>Type: <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/ctys3981" target="_blank">System<span id="ID0EBCAAGCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBCAAGCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>UInt32</a><br /><span></span></dd></dl></div><h4 class="subHeading">Usage Note</h4>In Visual Basic and C#, you can call this method as an instance method on any object of type . When you use instance method syntax to call this method, omit the first parameter. For more information, see <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn.microsoft.com/en-us/library/bb384936.aspx" target="_blank">Extension Methods (Visual Basic)</a> or <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn.microsoft.com/en-us/library/bb383977.aspx" target="_blank">Extension Methods (C# Programming Guide)</a>.<a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="T_NFX_IO_LEB128.htm" target="">LEB128 Class</a></div><div class="seeAlsoStyle"><a href="AllMembers_T_NFX_IO_LEB128.htm" target="">LEB128 Members</a></div><div class="seeAlsoStyle"><a href="Overload_NFX_IO_LEB128_WriteULEB128.htm" target="">WriteULEB128 Overload</a></div><div class="seeAlsoStyle"><a href="N_NFX_IO.htm" target="">NFX.IO Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p /><p><a href="http://www.itadapter.com" target="_blank"><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /> 
						Copyright © 2006-2017 ITAdapter Corp Inc. (http://www.itadapter.com)</a></p><div class="OH_feedbacklink"><a href="mailto:nfx@itadapter.com?subject=NFX+Class+Library+LEB128.WriteULEB128+Method+(Byte%5b%5d%2c+UInt64%2c+Int32%2c+Int32%2c+UInt32)+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic to Contact Us.</div></div></body></html>