<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>NFX.Serialization.Slim Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="NFX.Serialization.Slim namespace" /><meta name="Microsoft.Help.F1" content="NFX.Serialization.Slim" /><meta name="Microsoft.Help.Id" content="N:NFX.Serialization.Slim" /><meta name="Description" content="Provides Slim serialization functionality" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="NFX.Serialization.Slim" /><meta name="file" content="N_NFX_Serialization_Slim" /><meta name="guid" content="N_NFX_Serialization_Slim" /><link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdLogoColumn"><img src="./../icons/NFX.logo.35.png" /></td><td class="OH_tdTitleColumn">NFX.Serialization.Slim Namespace</td><td class="OH_tdRunningTitleColumn">NFX Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p><div class="summary">Provides Slim serialization functionality</div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Classes</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="typeList" class="members"><tr><th class="ps_iconColumn">
					 
				</th><th class="ps_nameColumn">Class</th><th class="ps_descriptionColumn">Description</th></tr><tr data="class; public"><td><img src="./../icons/protclass.gif" alt="Protected class" title="Protected class" /></td><td><a href="T_NFX_Serialization_Slim__ISerializableFixup.htm" target="">_ISerializableFixup</a></td><td></td></tr><tr data="class; public"><td><img src="./../icons/protclass.gif" alt="Protected class" title="Protected class" /></td><td><a href="T_NFX_Serialization_Slim__OnDeserializedCallback.htm" target="">_OnDeserializedCallback</a></td><td></td></tr><tr data="class; public"><td><img src="./../icons/protclass.gif" alt="Protected class" title="Protected class" /></td><td><a href="T_NFX_Serialization_Slim_Arrays.htm" target="">Arrays</a></td><td></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Serialization_Slim_PODSlimSerializer.htm" target="">PODSlimSerializer</a></td><td><div class="summary">
            Serializes CLR object graphs using PortableObjectDocument container and Slim binary serialization algorithm.
            This class is far less performant than SlimSerializer, however it serializes types using document model that
             allows to transform/change data during serialization/deserialization.
            This class is needed for upgrades, when object metadata may change but need to be read (maybe partially) back into the new type structure
            </div></td></tr><tr data="class; public"><td><img src="./../icons/protclass.gif" alt="Protected class" title="Protected class" /></td><td><a href="T_NFX_Serialization_Slim_RefPool.htm" target="">RefPool</a></td><td></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Serialization_Slim_SlimDeserializationCtorSkipAttribute.htm" target="">SlimDeserializationCtorSkipAttribute</a></td><td><div class="summary">
            When set on a parameterless constructor, instructs the Slim serializer not to invoke
             the ctor() on deserialization
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Serialization_Slim_SlimDeserializationException.htm" target="">SlimDeserializationException</a></td><td><div class="summary">
            Base exception thrown by the Slim when deserializing objects
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Serialization_Slim_SlimException.htm" target="">SlimException</a></td><td><div class="summary">
            Base exception thrown by the Slim serialization format
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Serialization_Slim_SlimInvalidTypeHandleException.htm" target="">SlimInvalidTypeHandleException</a></td><td><div class="summary">
            Thrown by type registry when supplied type handle is invalid/not found
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Serialization_Slim_SlimSerializationException.htm" target="">SlimSerializationException</a></td><td><div class="summary">
            Base exception thrown by the Slim when serializing objects
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Serialization_Slim_SlimSerializationProhibitedAttribute.htm" target="">SlimSerializationProhibitedAttribute</a></td><td><div class="summary">
            When set fails an attempt to serialize the decorated type
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Serialization_Slim_SlimSerializationProhibitedException.htm" target="">SlimSerializationProhibitedException</a></td><td><div class="summary">
            Thrown when a type is decoreted with SlimSerializationProhibitedAttribute
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Serialization_Slim_SlimSerializer.htm" target="">SlimSerializer</a></td><td><div class="summary">
            Implements Slim serialization algorithm that relies on an injectable SlimFormat-derivative (through .ctor) paremeter.
            This class was designed for highly-efficient serialization of types without versioning.
            SlimSerializer supports a concept of "known types" that save space by not emitting their names into stream.
            Performance note:
            This serializer yields on average 1/4 serialization and 1/2 deserialization times while compared to BinaryFormatter.
            Serialization of Record-instances usually takes 1/6 of BinaryFormatter time.
            Format takes 1/10 space for records and 1/2 for general object graphs.
            Such performance is achieved because of dynamic compilation of type-specific serialization/deserialization methods.
            This type is thread-safe for serializations/deserializations when TypeMode is set to "PerCall"
            </div></td></tr><tr data="class; public"><td><img src="./../icons/protclass.gif" alt="Protected class" title="Protected class" /></td><td><a href="T_NFX_Serialization_Slim_TypeDescriptor.htm" target="">TypeDescriptor</a></td><td><div class="summary">
            Type descriptor dynamicaly compiles serialization/deserialization expressions for a particular type
            </div></td></tr><tr data="class; public"><td><img src="./../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_NFX_Serialization_Slim_TypeRegistry.htm" target="">TypeRegistry</a></td><td><div class="summary">
            Provides a registry of types, types that do not need to be described in a serialization stream
            </div></td></tr><tr data="class; public"><td><img src="./../icons/protclass.gif" alt="Protected class" title="Protected class" /></td><td><a href="T_NFX_Serialization_Slim_TypeSchema.htm" target="">TypeSchema</a></td><td></td></tr></table><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Structures</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="typeList" class="members"><tr><th class="ps_iconColumn">
					 
				</th><th class="ps_nameColumn">Structure</th><th class="ps_descriptionColumn">Description</th></tr><tr data="structure; public"><td><img src="./../icons/protstructure.gif" alt="Protected structure" title="Protected structure" /></td><td><a href="T_NFX_Serialization_Slim_QuickRefList.htm" target="">QuickRefList</a></td><td></td></tr></table><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Interfaces</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="typeList" class="members"><tr><th class="ps_iconColumn">
					 
				</th><th class="ps_nameColumn">Interface</th><th class="ps_descriptionColumn">Description</th></tr><tr data="interface; public"><td><img src="./../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_NFX_Serialization_Slim_ISlimSerializer.htm" target="">ISlimSerializer</a></td><td><div class="summary">
            Marker interface for formats based on Slim algorithm family
            </div></td></tr></table><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Delegates</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="typeList" class="members"><tr><th class="ps_iconColumn">
					 
				</th><th class="ps_nameColumn">Delegate</th><th class="ps_descriptionColumn">Description</th></tr><tr data="delegate; public"><td><img src="./../icons/protdelegate.gif" alt="Protected delegate" title="Protected delegate" /></td><td><a href="T_NFX_Serialization_Slim_dyn_deserialize.htm" target="">dyn_deserialize</a></td><td></td></tr><tr data="delegate; public"><td><img src="./../icons/protdelegate.gif" alt="Protected delegate" title="Protected delegate" /></td><td><a href="T_NFX_Serialization_Slim_dyn_serialize.htm" target="">dyn_serialize</a></td><td></td></tr></table><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Enumerations</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="typeList" class="members"><tr><th class="ps_iconColumn">
					 
				</th><th class="ps_nameColumn">Enumeration</th><th class="ps_descriptionColumn">Description</th></tr><tr data="enumeration; public"><td><img src="./../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_NFX_Serialization_Slim_TypeRegistryMode.htm" target="">TypeRegistryMode</a></td><td><div class="summary">
            Denotes modes of handling type registry by Slim serializer
            </div></td></tr></table></div></div></div></div><div id="OH_footer" class="OH_footer"><p /><p><a href="http://www.itadapter.com" target="_blank"><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /> 
						Copyright © 2006-2017 ITAdapter Corp Inc. (http://www.itadapter.com)</a></p><div class="OH_feedbacklink"><a href="mailto:nfx@itadapter.com?subject=NFX+Class+Library+NFX.Serialization.Slim+Namespace+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic to Contact Us.</div></div></body></html>