<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ErlLocalNode Members</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="ErlLocalNode class" /><meta name="System.Keywords" content="ErlLocalNode class, all members" /><meta name="System.Keywords" content="NFX.Erlang.ErlLocalNode class" /><meta name="Microsoft.Help.Id" content="AllMembers.T:NFX.Erlang.ErlLocalNode" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="NFX.Erlang" /><meta name="file" content="AllMembers_T_NFX_Erlang_ErlLocalNode" /><meta name="guid" content="AllMembers_T_NFX_Erlang_ErlLocalNode" /><link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdLogoColumn"><img src="./../icons/NFX.logo.35.png" /></td><td class="OH_tdTitleColumn">ErlLocalNode Members</td><td class="OH_tdRunningTitleColumn">NFX Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p>The <a href="T_NFX_Erlang_ErlLocalNode.htm" target="">ErlLocalNode</a> type exposes the following members.<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Constructors</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="memberList" class="members"><tr><th class="ps_iconColumn">
							 
						</th><th class="ps_nameColumn">Name</th><th class="ps_descriptionColumn">Description</th></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode__ctor.htm" target="">ErlLocalNode(String, IConfigSectionNode)</a></td><td><div class="summary">Initializes a new instance of the <a href="T_NFX_Erlang_ErlLocalNode.htm" target="">ErlLocalNode</a> class</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode__ctor_2.htm" target="">ErlLocalNode(String, Boolean, Boolean)</a></td><td><div class="summary">
            Create a node with the given name and the default cookie
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode__ctor_1.htm" target="">ErlLocalNode(String, ErlAtom, Boolean, Boolean)</a></td><td><div class="summary">
            Create a node with the given name, cookie, and short name indicator
            </div></td></tr></table><a href="#mainBody" target="">Back to Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Methods</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="memberList" class="members"><tr><th class="ps_iconColumn">
							 
						</th><th class="ps_nameColumn">Name</th><th class="ps_descriptionColumn">Description</th></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_ServiceModel_Service_____ObtainPrivateServiceStatusLockObject.htm" target="">____ObtainPrivateServiceStatusLockObject</a></td><td><div class="summary">
            WARNING: Developers never call this method!!!
            It is used by advanced derived implementations that need to synchronize status updates.
            We do not want to make statuslock protected as it is almost never needed, hence this accessor
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_ApplicationModel_ApplicationComponent___setComponentDirector.htm" target="">__setComponentDirector</a></td><td> (Inherited from <a href="T_NFX_ApplicationModel_ApplicationComponent.htm" target="">ApplicationComponent</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_ServiceModel_Service_AbortStart.htm" target="">AbortStart</a></td><td><div class="summary">
            Allows to abort unsuccessful DoStart() overridden implementation.
            This method must be called from within DoStart()
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ServiceModel_Service_AcceptManagerVisit.htm" target="">AcceptManagerVisit</a></td><td><div class="summary">
            Accepts a visit of a manager entity - this call is useful for periodic updates of service status,
            i.e.  when service does not have a thread of its own it can be periodically managed by some other service through this method.
            The default implementation of DoAcceptManagerVisit(object, DateTime) does nothing
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_Add.htm" target="">Add</a></td><td><div class="summary">
            Add a connection to collection
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_ApplicationFinishAfterCleanup.htm" target="">ApplicationFinishAfterCleanup</a></td><td></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_ApplicationFinishBeforeCleanup.htm" target="">ApplicationFinishBeforeCleanup</a></td><td></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_BreakLinks.htm" target="">BreakLinks</a></td><td><div class="summary">
            Break links of all pids linked to pids on the fromNode node
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ServiceModel_Service_CheckForCompleteStop.htm" target="">CheckForCompleteStop</a></td><td><div class="summary">
            Non-blocking call that returns true when the service instance has completely stopped after SignalStop()
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_ServiceModel_Service_CheckServiceActive.htm" target="">CheckServiceActive</a></td><td><div class="summary">
            Checks for service activity and throws exception if service is not in ControlStatus.Active state
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_ServiceModel_Service_CheckServiceActiveOrStarting.htm" target="">CheckServiceActiveOrStarting</a></td><td><div class="summary">
            Checks for service activity and throws exception if service is not in ControlStatus.Active state
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_ServiceModel_Service_CheckServiceInactive.htm" target="">CheckServiceInactive</a></td><td><div class="summary">
            Checks for service inactivity and throws exception if service is running (started, starting or stopping)
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_CloseMbox.htm" target="">CloseMbox</a></td><td><div class="summary">
            Close the given mailbox
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ServiceModel_Service_Configure.htm" target="">Configure</a></td><td><div class="summary">
            Configures service from configuration node (and possibly it's sub-nodes)
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_Connection_2.htm" target="">Connection(String, Nullable<span id="ID0EDAB0XB0BGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDAB0XB0BGAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>ErlAtom<span id="ID0EBAB0XB0BGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBAB0XB0BGAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script>)</a></td><td></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_Connection.htm" target="">Connection(ErlAtom, Nullable<span id="ID0EDAB0WB0BGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDAB0WB0BGAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>ErlAtom<span id="ID0EBAB0WB0BGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBAB0WB0BGAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script>)</a></td><td></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_Connection_1.htm" target="">Connection(String, IConfigSectionNode, Nullable<span id="ID0EDAB0VB0BGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDAB0VB0BGAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>ErlAtom<span id="ID0EBAB0VB0BGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBAB0VB0BGAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script>)</a></td><td></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_CreateMbox_1.htm" target="">CreateMbox(String)</a></td><td><div class="summary">
            Create a new named mailbox (emulates spawning a new Pid)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_CreateMbox.htm" target="">CreateMbox(ErlAtom)</a></td><td><div class="summary">
            Create a new named mailbox (emulates spawning a new Pid)
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_CreateNullPid.htm" target="">CreateNullPid</a></td><td><div class="summary">
            Create an Erlang <a href="T_NFX_Erlang_ErlPid.htm" target="">ErlPid</a> that belongs to current node
            </div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_CreatePid.htm" target="">CreatePid</a></td><td><div class="summary">
            Create an Erlang <a href="T_NFX_Erlang_ErlPid.htm" target="">ErlPid</a>. Erlang pids are based
            upon some node specific information; this method creates a pid
            using the information in this node. Each call to this method
            produces a unique pid
            </div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_CreatePort.htm" target="">CreatePort</a></td><td><div class="summary">
            Create an Erlang <a href="T_NFX_Erlang_ErlPort.htm" target="">ErlPort</a>. Erlang ports are
            based upon some node specific information; this method creates a
            port using the information in this node. Each call to this method
            produces a unique port. It may not be meaningful to create a port
            in a non-Erlang environment, but this method is provided for
            completeness
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_CreateRef.htm" target="">CreateRef</a></td><td><div class="summary">
            Create an Erlang {@link Ref reference}. Erlang
            references are based upon some node specific information; this
            method creates a reference using the information in this node.
            Each call to this method produces a unique reference
            </div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_Deliver_1.htm" target="">Deliver(ErlConnectionException)</a></td><td></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_Deliver_2.htm" target="">Deliver(ErlMsg)</a></td><td></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_Deliver.htm" target="">Deliver(ErlAtom, ErlMsg)</a></td><td></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_ServiceModel_Service_Destructor.htm" target="">Destructor</a></td><td> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_Disconnect.htm" target="">Disconnect</a></td><td></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_DisposableObject_Dispose.htm" target="">Dispose</a></td><td><div class="summary">
            Deterministically disposes object. DO NOT OVERRIDE this method, override Destructor() instead
            </div> (Inherited from <a href="T_NFX_DisposableObject.htm" target="">DisposableObject</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_ServiceModel_Service_DoAcceptManagerVisit.htm" target="">DoAcceptManagerVisit</a></td><td><div class="summary">
            Accepts a visit from external manager. Base implementation does nothing.
             Override in services that need external management calls
              to update their state periodically, i.e. when they don't have a thread on their own
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_ServiceModel_Service_DoCheckForCompleteStop.htm" target="">DoCheckForCompleteStop</a></td><td><div class="summary">
            Provides implementation for checking whether the service has completely stopped
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_DoConfigure.htm" target="">DoConfigure</a></td><td> (Overrides <a href="M_NFX_Erlang_ErlAbstractNode_DoConfigure.htm" target="">ErlAbstractNode<span id="ID0EBBA0GB0BGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBA0GB0BGAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>DoConfigure(IConfigSectionNode)</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_ServiceModel_Service_DoSignalStop.htm" target="">DoSignalStop</a></td><td><div class="summary">
            Provides implementation that signals service to stop. This is expected not to block
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_DoStart.htm" target="">DoStart</a></td><td><div class="summary">
            Start current node. This optionally creates a socket listener
            and I/O server
            </div> (Overrides <a href="M_NFX_ServiceModel_Service_DoStart.htm" target="">Service<span id="ID0ECBA0EB0BGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECBA0EB0BGAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>DoStart<span id="ID0EABA0EB0BGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EABA0EB0BGAAAAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></a>.)</td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_DoWaitForCompleteStop.htm" target="">DoWaitForCompleteStop</a></td><td> (Overrides <a href="M_NFX_ServiceModel_Service_DoWaitForCompleteStop.htm" target="">Service<span id="ID0ECBA0DB0BGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECBA0DB0BGAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>DoWaitForCompleteStop<span id="ID0EABA0DB0BGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EABA0DB0BGAAAAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_DisposableObject_EnsureObjectNotDisposed.htm" target="">EnsureObjectNotDisposed</a></td><td><div class="summary">
            Checks to see whether object dispose started or has already been disposed and throws an exception if Dispose() was called
            </div> (Inherited from <a href="T_NFX_DisposableObject.htm" target="">DisposableObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/bsc2ak47" target="_blank">Equals</a></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_DisposableObject_Finalize.htm" target="">Finalize</a></td><td> (Inherited from <a href="T_NFX_DisposableObject.htm" target="">DisposableObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_FindMbox.htm" target="">FindMbox</a></td><td><div class="summary">
            Determine the mailbox corresponding to a
            registered name on this <a href="T_NFX_Erlang_ErlLocalNode.htm" target="">ErlLocalNode</a></div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/zdee4b3y" target="_blank">GetHashCode</a></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/dfwy45w9" target="_blank">GetType</a></td><td><div class="summary">Gets the <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">Type</a> of the current instance.</div> (Inherited from <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ServiceModel_Service_LocalizedTimeToUniversalTime.htm" target="">LocalizedTimeToUniversalTime</a></td><td><div class="summary">
            Converts localized time to UTC time as of TimeLocation property
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_MakeLocalNodeForThisAppOnThisHost.htm" target="">MakeLocalNodeForThisAppOnThisHost</a></td><td><div class="summary">
            Makes local node name based on app id and local host name
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/57ctke0a" target="_blank">MemberwiseClone</a></td><td><div class="summary">Creates a shallow copy of the current <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_OnConnectAttempt.htm" target="">OnConnectAttempt</a></td><td></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_OnEpmdFailedConnectAttempt.htm" target="">OnEpmdFailedConnectAttempt</a></td><td></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_OnIoOutput.htm" target="">OnIoOutput</a></td><td></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_OnNodeStatusChange.htm" target="">OnNodeStatusChange</a></td><td></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_OnReadWrite.htm" target="">OnReadWrite</a></td><td></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_OnTrace.htm" target="">OnTrace(ErlTraceLevel, Direction, Func<span id="ID0EDABUBGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDABUBGAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>String<span id="ID0EBABUBGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABUBGAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script>, String, Int32)</a></td><td></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_OnTrace_1.htm" target="">OnTrace(ErlTraceLevel, Direction, String, String, Int32)</a></td><td></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_OnTraceCore.htm" target="">OnTraceCore</a></td><td></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_OnUnhandledMsg.htm" target="">OnUnhandledMsg</a></td><td></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_RemoteNodeConfig.htm" target="">RemoteNodeConfig</a></td><td><div class="summary">
            Get configuration settings for a given remote node
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_Remove.htm" target="">Remove</a></td><td><div class="summary">
            Remove a connection from collection
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_RPC.htm" target="">RPC</a></td><td></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_Send_2.htm" target="">Send(ErlPid, IErlObject)</a></td><td><div class="summary">
            Send a message to a remote <a href="T_NFX_Erlang_ErlPid.htm" target="">ErlPid</a>, representing
            either another <a href="T_NFX_Erlang_ErlMbox.htm" target="">ErlMbox</a> or an Erlang process
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_Send_1.htm" target="">Send(ErlPid, ErlAtom, IErlObject)</a></td><td><div class="summary">
            Send a message to a named mailbox on local node
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_Send.htm" target="">Send(ErlPid, ErlAtom, ErlAtom, IErlObject)</a></td><td><div class="summary">
            Send a message to a named mailbox on a given remote node
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_Erlang_ErlAbstractNode_SetNodeName.htm" target="">SetNodeName</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ServiceModel_Service_SignalStop.htm" target="">SignalStop</a></td><td><div class="summary">
            Non-blocking call that initiates the stopping of the service
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ServiceModel_Service_Start.htm" target="">Start</a></td><td><div class="summary">
            Blocking call that starts the service instance
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_NFX_ServiceModel_Service_StartByApplication.htm" target="">StartByApplication</a></td><td><div class="summary">
            Blocking call that starts the service instance
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlAbstractNode_ToString.htm" target="">ToString</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ServiceModel_Service_UniversalTimeToLocalizedTime.htm" target="">UniversalTimeToLocalizedTime</a></td><td><div class="summary">
            Converts universal time to local time as of TimeLocation property
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_WaitAny.htm" target="">WaitAny(<span id="ID0EDABEBGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDABEBGAAAAA?vb=|cpp=array&lt;|cs=|fs=|nu=");
				</script>ErlMbox<span id="ID0EBABEBGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABEBGAAAAA?vb=()|cpp=&gt;|cs=[]|fs=[]|nu=[]");
				</script>)</a></td><td></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_WaitAny_3.htm" target="">WaitAny(Int32, <span id="ID0EDABDBGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDABDBGAAAAA?vb=|cpp=array&lt;|cs=|fs=|nu=");
				</script>ErlMbox<span id="ID0EBABDBGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABDBGAAAAA?vb=()|cpp=&gt;|cs=[]|fs=[]|nu=[]");
				</script>)</a></td><td></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_WaitAny_1.htm" target="">WaitAny(<span id="ID0EDABCBGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDABCBGAAAAA?vb=|cpp=array&lt;|cs=|fs=|nu=");
				</script>ErlMbox<span id="ID0EBABCBGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABCBGAAAAA?vb=()|cpp=&gt;|cs=[]|fs=[]|nu=[]");
				</script>, Int32)</a></td><td><div class="summary">
            Wait for arrival of messages in any one of the given mailboxes
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_Erlang_ErlLocalNode_WaitAny_2.htm" target="">WaitAny(IEnumerable<span id="ID0EDABBBGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDABBBGAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>ErlMbox<span id="ID0EBABBBGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABBBGAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script>, Int32)</a></td><td></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NFX_ServiceModel_Service_WaitForCompleteStop.htm" target="">WaitForCompleteStop</a></td><td><div class="summary">
            Blocks execution of current thread until this service has completely stopped
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr></table><a href="#mainBody" target="">Back to Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Extension Methods</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="memberList" class="members"><tr><th class="ps_iconColumn">
							 
						</th><th class="ps_nameColumn">Name</th><th class="ps_descriptionColumn">Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsBool.htm" target="">AsBool</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsByte.htm" target="">AsByte</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsChar.htm" target="">AsChar</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsDateTime.htm" target="">AsDateTime<span id="ID0EAAB0RB0BFAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAAB0RB0BFAAAAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></a></td><td>Overloaded.   (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsDateTime_1.htm" target="">AsDateTime(DateTime, ConvertErrorHandling)</a></td><td>Overloaded.   (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsDecimal.htm" target="">AsDecimal</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsDouble.htm" target="">AsDouble</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsEnum__1.htm" target="">AsEnum<span id="ID0ECAB0NB0BFAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECAB0NB0BFAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>TEnum<span id="ID0EAAB0NB0BFAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAAB0NB0BFAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsFloat.htm" target="">AsFloat</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsGDID.htm" target="">AsGDID<span id="ID0EAAB0LB0BFAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAAB0LB0BFAAAAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></a></td><td>Overloaded.   (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsGDID_1.htm" target="">AsGDID(GDID, ConvertErrorHandling)</a></td><td>Overloaded.   (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsGDIDSymbol.htm" target="">AsGDIDSymbol<span id="ID0EAAB0JB0BFAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAAB0JB0BFAAAAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></a></td><td>Overloaded.   (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsGDIDSymbol_1.htm" target="">AsGDIDSymbol(GDIDSymbol, ConvertErrorHandling)</a></td><td>Overloaded.   (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsGUID.htm" target="">AsGUID</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsInt.htm" target="">AsInt</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsJSONConfig.htm" target="">AsJSONConfig</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsLaconicConfig.htm" target="">AsLaconicConfig</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsLong.htm" target="">AsLong</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNonNullOrEmptyString.htm" target="">AsNonNullOrEmptyString</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableBool_1.htm" target="">AsNullableBool</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableByte.htm" target="">AsNullableByte</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableChar.htm" target="">AsNullableChar</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableDateTime.htm" target="">AsNullableDateTime</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableDecimal.htm" target="">AsNullableDecimal</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableDouble.htm" target="">AsNullableDouble</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableEnum__1.htm" target="">AsNullableEnum<span id="ID0ECAB2BFAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECAB2BFAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>TEnum<span id="ID0EAAB2BFAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAAB2BFAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableFloat.htm" target="">AsNullableFloat</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableGDID.htm" target="">AsNullableGDID</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableGDIDSymbol.htm" target="">AsNullableGDIDSymbol</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableGUID.htm" target="">AsNullableGUID</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableInt.htm" target="">AsNullableInt</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableLong.htm" target="">AsNullableLong</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableSByte.htm" target="">AsNullableSByte</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableShort.htm" target="">AsNullableShort</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableTimeSpan.htm" target="">AsNullableTimeSpan</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableUInt.htm" target="">AsNullableUInt</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableULong.htm" target="">AsNullableULong</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsNullableUShort.htm" target="">AsNullableUShort</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsSByte.htm" target="">AsSByte</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsShort.htm" target="">AsShort</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsString.htm" target="">AsString</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsTimeSpan.htm" target="">AsTimeSpan<span id="ID0EAABLBFAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAABLBFAAAAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></a></td><td>Overloaded.   (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsTimeSpan_1.htm" target="">AsTimeSpan(TimeSpan, ConvertErrorHandling)</a></td><td>Overloaded.   (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsUInt.htm" target="">AsUInt</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsULong.htm" target="">AsULong</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsUri.htm" target="">AsUri</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsUShort.htm" target="">AsUShort</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_ObjectValueConversion_AsXMLConfig.htm" target="">AsXMLConfig</a></td><td> (Defined by <a href="T_NFX_ObjectValueConversion.htm" target="">ObjectValueConversion</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_Erlang_ErlObject_ToErlObject.htm" target="">ToErlObject<span id="ID0EAABEBFAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAABEBFAAAAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></a></td><td>Overloaded.  <div class="summary">
            Try to convert .NET native object type to corresponding Erlang term.
            Throw exception if conversion is not possible
            </div> (Defined by <a href="T_NFX_Erlang_ErlObject.htm" target="">ErlObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_Erlang_ErlObject_ToErlObject_1.htm" target="">ToErlObject(ErlTypeOrder, Boolean)</a></td><td>Overloaded.  <div class="summary">
            Try to convert .NET native object type to corresponding Erlang term of given type.
            Throw exception if conversion is not possible
            </div> (Defined by <a href="T_NFX_Erlang_ErlObject.htm" target="">ErlObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_Serialization_JSON_JSONExtensions_ToJSON.htm" target="">ToJSON(JSONWritingOptions)</a></td><td>Overloaded.  <div class="summary">
             Serializes object into JSON string
            </div> (Defined by <a href="T_NFX_Serialization_JSON_JSONExtensions.htm" target="">JSONExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_Serialization_JSON_JSONExtensions_ToJSON_2.htm" target="">ToJSON(TextWriter, JSONWritingOptions)</a></td><td>Overloaded.  <div class="summary">
             Serializes object into JSON format using provided TextWriter
            </div> (Defined by <a href="T_NFX_Serialization_JSON_JSONExtensions.htm" target="">JSONExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_NFX_Serialization_JSON_JSONExtensions_ToJSON_1.htm" target="">ToJSON(Stream, JSONWritingOptions, Encoding)</a></td><td>Overloaded.  <div class="summary">
             Serializes object into JSON format using provided stream and optional encoding
            </div> (Defined by <a href="T_NFX_Serialization_JSON_JSONExtensions.htm" target="">JSONExtensions</a>.)</td></tr></table><a href="#mainBody" target="">Back to Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Fields</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="memberList" class="members"><tr><th class="ps_iconColumn">
							 
						</th><th class="ps_nameColumn">Name</th><th class="ps_descriptionColumn">Description</th></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protfield.gif" alt="Protected field" title="Protected field" /></td><td><a href="F_NFX_Erlang_ErlAbstractNode_m_Creation.htm" target="">m_Creation</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protfield.gif" alt="Protected field" title="Protected field" /></td><td><a href="F_NFX_Erlang_ErlLocalNode_m_Mailboxes.htm" target="">m_Mailboxes</a></td><td></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protfield.gif" alt="Protected field" title="Protected field" /></td><td><a href="F_NFX_Erlang_ErlLocalNode_m_OnReadWrite.htm" target="">m_OnReadWrite</a></td><td><div class="summary">
            Delegate invoked on read/write from socket
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protfield.gif" alt="Protected field" title="Protected field" /></td><td><a href="F_NFX_Erlang_ErlAbstractNode_m_TcpKeepAlive.htm" target="">m_TcpKeepAlive</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protfield.gif" alt="Protected field" title="Protected field" /></td><td><a href="F_NFX_Erlang_ErlAbstractNode_m_TcpLinger.htm" target="">m_TcpLinger</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protfield.gif" alt="Protected field" title="Protected field" /></td><td><a href="F_NFX_Erlang_ErlAbstractNode_m_TcpNoDelay.htm" target="">m_TcpNoDelay</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protfield.gif" alt="Protected field" title="Protected field" /></td><td><a href="F_NFX_Erlang_ErlAbstractNode_m_TcpRcvBufSize.htm" target="">m_TcpRcvBufSize</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protfield.gif" alt="Protected field" title="Protected field" /></td><td><a href="F_NFX_Erlang_ErlAbstractNode_m_TcpSndBufSize.htm" target="">m_TcpSndBufSize</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr></table><a href="#mainBody" target="">Back to Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Properties</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="memberList" class="members"><tr><th class="ps_iconColumn">
							 
						</th><th class="ps_nameColumn">Name</th><th class="ps_descriptionColumn">Description</th></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_NFX_Erlang_ErlLocalNode_AcceptAddressPort.htm" target="">AcceptAddressPort</a></td><td><div class="summary">
            Configuration Address and Port information for the listener in
            the "address:port" format
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlLocalNode_AcceptConnections.htm" target="">AcceptConnections</a></td><td><div class="summary">
            If true local node will start a listener
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_AliveName.htm" target="">AliveName</a></td><td><div class="summary">
            Get the alivename part of the hostname. Nodenames are composed of
            two parts, an alivename and a hostname, separated by '@'. This
            method returns the part of the nodename preceding the '@'
            </div> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlLocalNode_AllNodeConfigs.htm" target="">AllNodeConfigs</a></td><td><div class="summary">
            Configs for remote nodes
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ServiceModel_Service_ApplicationDontAutoStartService.htm" target="">ApplicationDontAutoStartService</a></td><td><div class="summary">
            Checks whether the class is decorated with ApplicationDontAutoStartServiceAttribute
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_ApplicationComponent_ComponentCommonName.htm" target="">ComponentCommonName</a></td><td><div class="summary">
            Returns the common name used to identify the component, for example "Glue" for various IGlue implementations.
            This name is searched-by some management tools that allow to find component by this name that does not change between
            application restarts like ComponentSID does. Subordinate (non-root) components return null
            </div> (Inherited from <a href="T_NFX_ApplicationModel_ApplicationComponent.htm" target="">ApplicationComponent</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_ApplicationComponent_ComponentDirector.htm" target="">ComponentDirector</a></td><td><div class="summary">
            Returns a reference to an object that this app component services/operates under, or null
            </div> (Inherited from <a href="T_NFX_ApplicationModel_ApplicationComponent.htm" target="">ApplicationComponent</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_ApplicationComponent_ComponentSID.htm" target="">ComponentSID</a></td><td><div class="summary">
            Returns process/instance unique app component system id
            </div> (Inherited from <a href="T_NFX_ApplicationModel_ApplicationComponent.htm" target="">ApplicationComponent</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ApplicationModel_ApplicationComponent_ComponentStartTime.htm" target="">ComponentStartTime</a></td><td><div class="summary">
            Returns local computer time of component start (not from application container time)
            </div> (Inherited from <a href="T_NFX_ApplicationModel_ApplicationComponent.htm" target="">ApplicationComponent</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlLocalNode_Connections.htm" target="">Connections</a></td><td></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_Cookie.htm" target="">Cookie</a></td><td><div class="summary">
            Get the authorization cookie used by this node
            </div> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlLocalNode_Creation.htm" target="">Creation</a></td><td><div class="summary">
            Contains node creation bits that facilitate Pid uniqueness
            upon node restart
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_DisposableObject_Disposed.htm" target="">Disposed</a></td><td><div class="summary">
            Indicates whether this object was already disposed - the Dispose() has finished
            </div> (Inherited from <a href="T_NFX_DisposableObject.htm" target="">DisposableObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_DisposableObject_DisposeStarted.htm" target="">DisposeStarted</a></td><td><div class="summary">
            Indicates whether this object Dispose() has been called and dispose started but not finished yet
            </div> (Inherited from <a href="T_NFX_DisposableObject.htm" target="">DisposableObject</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_DistChoose.htm" target="">DistChoose</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_DistHigh.htm" target="">DistHigh</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_DistLow.htm" target="">DistLow</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_Epmd.htm" target="">Epmd</a></td><td><div class="summary">
            Get/Set the Epmd socket after publishing this nodes listen port to Epmd
            </div> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_Flags.htm" target="">Flags</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlLocalNode_GroupLeader.htm" target="">GroupLeader</a></td><td><div class="summary">
            Mailbox for handling all I/O directed from remote nodes
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_Host.htm" target="">Host</a></td><td><div class="summary">
            Get the hostname part of the nodename. Nodenames are composed of
            two parts, an alivename and a hostname, separated by '@'. This
            method returns the part of the nodename following the '@'
            </div> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ServiceModel_Service_LocalizedTime.htm" target="">LocalizedTime</a></td><td><div class="summary">
            Returns current time localized per TimeLocation
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlLocalNode_LogUnhandledMsgs.htm" target="">LogUnhandledMsgs</a></td><td><div class="summary">
            Record unhandled msgs to log
            </div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_NFX_Erlang_ErlLocalNode_Mailboxes.htm" target="">Mailboxes</a></td><td></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_NFX_Erlang_ErlLocalNode_MboxFreelist.htm" target="">MboxFreelist</a></td><td><div class="summary">
            Cache of freed mailboxes that can be reused for RPC calls
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ServiceModel_Service_Name.htm" target="">Name</a></td><td><div class="summary">
            Provides textual name for the service
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_NodeLongName.htm" target="">NodeLongName</a></td><td><div class="summary">
            Get the long name of this node
            </div> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_NodeName.htm" target="">NodeName</a></td><td><div class="summary">
            Get the name of this node (short or long depending on UseShortName)
            </div> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_Ntype.htm" target="">Ntype</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_Port.htm" target="">Port</a></td><td><div class="summary">
            Get the port number used by this node.
            For local node the value may be 0 if the node was not registered with
            the EPMD port mapper
            </div> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_Proto.htm" target="">Proto</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlLocalNode_RemoteNodeConfigs.htm" target="">RemoteNodeConfigs</a></td><td></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ServiceModel_Service_Running.htm" target="">Running</a></td><td><div class="summary">
            Returns true when service is active or about to become active.
            Check in service implementation loops/threads/tasks
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ServiceModel_Service_Status.htm" target="">Status</a></td><td><div class="summary">
            Current service status
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_TcpKeepAlive.htm" target="">TcpKeepAlive</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_TcpLinger.htm" target="">TcpLinger</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_TcpNoDelay.htm" target="">TcpNoDelay</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_TcpRcvBufSize.htm" target="">TcpRcvBufSize</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_TcpSndBufSize.htm" target="">TcpSndBufSize</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_ServiceModel_Service_TimeLocation.htm" target="">TimeLocation</a></td><td><div class="summary">
            Returns time location of this LocalizedTimeProvider implementation
            </div> (Inherited from <a href="T_NFX_ServiceModel_Service.htm" target="">Service</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlLocalNode_TraceLevel.htm" target="">TraceLevel</a></td><td><div class="summary">
            Set the trace level for this connection. Normally tracing is off by default
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_NFX_Erlang_ErlLocalNode_TraceToLog.htm" target="">TraceToLog</a></td><td><div class="summary">
            Save trace events to log
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_NFX_Erlang_ErlAbstractNode_UseShortName.htm" target="">UseShortName</a></td><td> (Inherited from <a href="T_NFX_Erlang_ErlAbstractNode.htm" target="">ErlAbstractNode</a>.)</td></tr></table><a href="#mainBody" target="">Back to Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Events</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="memberList" class="members"><tr><th class="ps_iconColumn">
							 
						</th><th class="ps_nameColumn">Name</th><th class="ps_descriptionColumn">Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_NFX_Erlang_ErlLocalNode_ConnectAttempt.htm" target="">ConnectAttempt</a></td><td></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_NFX_Erlang_ErlLocalNode_EpmdFailedConnectAttempt.htm" target="">EpmdFailedConnectAttempt</a></td><td></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_NFX_Erlang_ErlLocalNode_IoOutput.htm" target="">IoOutput</a></td><td></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_NFX_Erlang_ErlLocalNode_NodeStatusChange.htm" target="">NodeStatusChange</a></td><td></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_NFX_Erlang_ErlLocalNode_ReadWrite.htm" target="">ReadWrite</a></td><td></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_NFX_Erlang_ErlLocalNode_Trace.htm" target="">Trace</a></td><td><div class="summary">
            Trace callback executed if connection tracing is enabled
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_NFX_Erlang_ErlLocalNode_UnhandledMsg.htm" target="">UnhandledMsg</a></td><td></td></tr></table><a href="#mainBody" target="">Back to Top</a><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="T_NFX_Erlang_ErlLocalNode.htm" target="">ErlLocalNode Class</a></div><div class="seeAlsoStyle"><a href="N_NFX_Erlang.htm" target="">NFX.Erlang Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p /><p><a href="http://www.itadapter.com" target="_blank"><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /> 
						Copyright © 2006-2017 ITAdapter Corp Inc. (http://www.itadapter.com)</a></p><div class="OH_feedbacklink"><a href="mailto:nfx@itadapter.com?subject=NFX+Class+Library+ErlLocalNode+Members+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic to Contact Us.</div></div></body></html>